<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <import resource="admin-security.xml"/>

    <sec:http name="admin.security.section" create-session="stateless" pattern="/admin/.*" authentication-manager-ref="adminAuthenticationManager" use-expressions="true" request-matcher="regex">
        <sec:anonymous/>

        <sec:intercept-url pattern="/admin/messageProps.*" access="hasRole('ROLE_ADMIN')" />
        <sec:intercept-url pattern="/admin/serviceProps.*" access="hasRole('ROLE_ADMIN')" />
        <sec:intercept-url pattern="/admin/appProps.*" access="hasRole('ROLE_ADMIN')" />

        <sec:custom-filter before="FIRST" ref="communityResolverFilter" />

        <sec:http-basic />
    </sec:http>

    <sec:http pattern="/MANIFEST.MF" security="none" />

    <sec:http create-session="stateless" use-expressions="true">

        <sec:intercept-url pattern="/assets/**" access="permitAll" method="GET" />

        <sec:intercept-url pattern="/signup**" access="permitAll" />
        <sec:intercept-url pattern="/signin**" access="permitAll" />
        <sec:intercept-url pattern="/signout" access="permitAll" />
        <sec:intercept-url pattern="/faq**" access="permitAll" />
        <sec:intercept-url pattern="/terms**" access="permitAll" />
        <sec:intercept-url pattern="/privacy_policy**" access="permitAll" />

        <sec:intercept-url pattern="/**" access="authenticated" />

        <sec:http-basic />

        <sec:custom-filter after="FIRST" ref="filter.slowRequestFilter"/>
        <sec:custom-filter before="FIRST" ref="communityResolverFilter" />


        <sec:form-login default-target-url="/account.html"
                        authentication-failure-url="/signin.html?error" login-page="/signin.html"
                        password-parameter="token" username-parameter="email"
                        login-processing-url="/signin"
                />

        <sec:logout logout-success-url="/signin.html" logout-url="/signout" delete-cookies="JSESSIONID" />

        <sec:remember-me key="web" services-ref="nowTechBasedRememberMeServices" use-secure-cookie="true" />

        <sec:custom-filter after="REMEMBER_ME_FILTER" ref="afterRememberMeFilter" />
    </sec:http>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider user-service-ref="security.nowTechUserDetailsService">
            <sec:password-encoder ref="chartsNowPasswordEncoder">
                <sec:salt-source user-property="username" />
            </sec:password-encoder>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <bean id="nowTechBasedRememberMeServices" class="mobi.nowtechnologies.server.security.NowTechTokenBasedRememberMeServices">
        <constructor-arg>
            <value>${rememberMe.key}</value>
        </constructor-arg>
        <constructor-arg>
            <ref bean="security.nowTechUserDetailsService" />
        </constructor-arg>
        <property name="cookieName" value="${rememberMe.cookieName}"/>
        <property name="tokenValiditySeconds" value="${rememberMe.tokenValiditySeconds}"/>
        <property name="alwaysRemember" value="true"/>
        <property name="successfulHander">
            <bean class="mobi.nowtechnologies.server.web.service.impl.NowTechBasedRememberMeSuccessfulHandler">
                <property name="timeService" ref="timeService" />
                <property name="userRepository" ref="userRepository" />
            </bean>
        </property>
    </bean>

    <bean id="chartsNowPasswordEncoder" class="mobi.nowtechnologies.server.web.security.ChartsNowPasswordEncoder" />

    <bean id="security.nowTechUserDetailsService" class="mobi.nowtechnologies.server.web.service.impl.UserDetailsServiceImpl">
        <property name="userRepository" ref="userRepository"/>
    </bean>

    <bean id="communityResolverFilter" class="mobi.nowtechnologies.server.shared.web.filter.CommunityResolverFilter" />

    <bean id="afterRememberMeFilter" class="mobi.nowtechnologies.server.shared.web.security.filter.AfterRememberMeFilter">
        <property name="nowTechTokenBasedRememberMeServices"  ref="nowTechBasedRememberMeServices"/>
    </bean>
    <bean id="filter.slowRequestFilter" class="mobi.nowtechnologies.server.web.view.SlowRequestFilter"/>
</beans>