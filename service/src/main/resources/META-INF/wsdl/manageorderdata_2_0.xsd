<?xml version="1.0" encoding="UTF-8"?>
<!--Date            Change#       Author        	Change Description-->
<!--07/05/2013		2.1.16		  Jamir		        submitOrder operation updated to add card reference details complex structure as a choice-->
<!--13/02/2013		2.1.15		  Amit Kumar		Added The fields which contains the bank information used for Direct Debit payments for the submitUpgradeOrder as well as made the CCANumber optional.-->
<!--23/01/2013		2.1.14		  Amit Kumar		Changed the name termInMonths to term and upgradeCCADetails to CCADetails-->
<!--21/01/2013		2.1.13		  Amit Kumar		Added discretionaryDiscount in the 3.11.161	CCAFinancialDetailsType-->
<!--07/12/2012		2.1.12		  Amit Kumar		Updated submitOrder and submitUpgradeOrder_1 operation to include
													CCA details as part of project 76.-->
<!--04/10/2012		2.1.11		  Shivaji Rao JS	Corrected a type orderNumer to orderNumber in getConsignemtDetails_1 operation-->
<!--03/09/2012		2.1.10		  Shivaji Rao JS	Added new operation getConsignmentDetails for Stock Management Project -Release 4-->
<!--28/08/2012		2.1.9		  Shivaji Rao JS	updated Order Status enumeration in setConsignmentStateInOrder for Stock Management Project -Release 4-->
<!--01/08/2012		2.1.8		  Shivaji Rao JS	Added new operation setConsignmentStateInOrder for Stock Management Project -Release 4-->
<!--22/05/2012		2.1.7		  Shivaji Rao JS	Added StoreDetails complex element in submitOrder operation for Click and Collect project-->
<!--05/03/2012		2.1.6		  Shivaji Rao JS	Added StoreDetails complex element in submitUpgradeOrder operation for Click and Collect project-->
<!--29/11/2011      2.1.5		  Shivaji Rao JS	Corrected element to placeChargeableDeliveryOptionType/despatchDate, was wrongly name Date somehow-->
<!--14/11/2011      2.1.4         Shivaji Rao JS    Updated schema as per CUK ICD CR4743, the type of placeChargeableDeliveryOptionType/timeslot and deliveryOptionType/timeslot from enumeration type to xsd:string-->
<!--20/09/2011		2.1.3		  Raghu Ugare		Changed the word(spelling) despatcherDetails to dispatcherDetails in submitUpgradeOrder_1 request .-->
<!--20/09/2011		2.1.2		  Raghu Ugare		Removed the maxOccurs attribute for assignedProducts (should be 1..1) for submitUpgradeOrder_1 operation.-->
<!--30/08/2011		2.1.1		  Raghu Ugare		Added some types and elements pertaining to submitUpgradeOrder_1 based on ICD375.-->
<!--18/08/2011		2.1.0		  Raghu Ugare		Minor changes to submitUpgradeOrder_1 types, elements and multiplicities.-->
<!--12/08/2011		2.0.9		  Raghu Ugare		Added new operations getDeliveryOptions_1 and submitUpgradeOrder_1 as part of the OATC CCS Upgrade project.-->
<!--18/03/2011  	2.0.8         Amit Kumar		Incorporated the review comments, added portal details in getOrderList_2 request and getOrderDetails_2 response.-->
<!--16/03/2011  	2.0.7         Amit Kumar		Added new operations getOrderList_2 and getOrderDetails_2 operation for the modular tariff project.-->
<!--30/06/2010  	2.0.6         Arjun B			Made sourceOfSale and vatTotal non-mandatory in orderHeaderDetailsType-->
<!--19/05/2010   	2.0.5         Venkata Karthik	Made dateOfBirth under personalDetails non mandatory-->
<!--23/04/2010  	2.0.4         Arjun B			Made fields non-mandatory to accomodate archive order details in the response for getOrderDetails and getOrderList operations
													and changed major version to 2.x to align with the service version-->
<!--21/04/2010  	2.0.3         Arjun B			Pointed cardnumber to new type, maskedCardNumberType and userAccountNumber,bankAccountNumber to maskedBankAccountNumberType-->
<!--20/04/2010  	2.0.2         Shiby Varghese	Made sourceOfSale points to plain string type-->
<!--22/03/2010  	2.0.1         Shiby Varghese	Added oneOffCardDetailsType and removed cardCV2 from cardDetailsType-->
<!--02/02/2010  	2.0.0         Venkata Karthik	Initial Version-->
<xsd:schema targetNamespace="http://soa.o2.co.uk/manageorderdata_2" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1" xmlns:mod="http://soa.o2.co.uk/manageorderdata_2" xmlns:pcp="http://soa.o2.co.uk/pscommonpostpaydata_2">
   <xsd:import namespace="http://soa.o2.co.uk/coredata_1" schemaLocation="coredata_1_1.xsd"/>
   <xsd:import namespace="http://soa.o2.co.uk/pscommonpostpaydata_2" schemaLocation="pscommonpostpaydata_2_0.xsd"/>
   <xsd:element name="getOrderList" type="mod:getOrderList">
      <xsd:annotation>
         <xsd:documentation>This operation could return a list of orders for one of the following parameters,
				1. The user portal id on the O2 Registration Platform
				2. An internal unique user identifier on the O2 registration Platform
				3. Mobile Phone Number
				If a list of orders is associated with one of the above parameters, this operation should be able to paginate through the list.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderListResponse" type="mod:getOrderListResponse">
      <xsd:annotation>
         <xsd:documentation>This operation must retrieve a list of Orders, associated with an order identifier, provided one or more order(s) is associated with the given order identifier.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderListFault" type="xcore:SOAFaultType">
      <xsd:annotation>
         <xsd:documentation>SOA Fault</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderDetails" type="mod:getOrderDetails">
      <xsd:annotation>
         <xsd:documentation>This operation should retrieve the details of an order for one of the following parameters,
				1.	The order number associated with an order
				2.	Mobile Phone Number</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderDetailsResponse" type="mod:getOrderDetailsResponse">
      <xsd:annotation>
         <xsd:documentation>This operation should retrieve the details of an order for an order identifier, provided an order is associated with the given order identifier.
				An additional CSA identifier needs to be provided in the input.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderDetailsFault" type="xcore:SOAFaultType">
      <xsd:annotation>
         <xsd:documentation>SOA Fault</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="submitOrder" type="mod:submitOrder">
      <xsd:annotation>
         <xsd:documentation>The request to submit an order request for a service.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="submitOrderResponse" type="mod:submitOrderResponse">
      <xsd:annotation>
         <xsd:documentation>The response of submit order.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="submitOrderFault" type="xcore:SOAFaultType">
      <xsd:annotation>
         <xsd:documentation>SOA Fault</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getDeliveryOptions_1" type="mod:getDeliveryOptions_1">
      <xsd:annotation>
         <xsd:documentation/>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getDeliveryOptions_1Response" type="mod:getDeliveryOptions_1Response">
      <xsd:annotation>
         <xsd:documentation/>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getDeliveryOptions_1Fault" type="xcore:SOAFaultType">
      <xsd:annotation>
         <xsd:documentation>SOA Fault</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="submitUpgradeOrder_1" type="mod:submitUpgradeOrder_1">
      <xsd:annotation>
         <xsd:documentation/>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="submitUpgradeOrder_1Response" type="mod:submitUpgradeOrder_1Response">
      <xsd:annotation>
         <xsd:documentation/>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="submitUpgradeOrder_1Fault" type="xcore:SOAFaultType">
      <xsd:annotation>
         <xsd:documentation>SOA Fault</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <!--new operations-->
   <xsd:element name="getOrderList_2" type="mod:getOrderList_2">
      <xsd:annotation>
         <xsd:documentation>This operation could return a list of orders for one of the following parameters,
				1. The user portal id on the O2 Registration Platform
				2. An internal unique user identifier on the O2 registration Platform
				3. Mobile Phone Number
				If a list of orders is associated with one of the above parameters, this operation should be able to paginate through the list.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderList_2Response" type="mod:getOrderList_2Response">
      <xsd:annotation>
         <xsd:documentation>This operation must retrieve a list of Orders, associated with an order identifier, provided one or more order(s) is associated with the given order identifier.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderList_2Fault" type="xcore:SOAFaultType">
      <xsd:annotation>
         <xsd:documentation>SOA Fault</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderDetails_2" type="mod:getOrderDetails_2">
      <xsd:annotation>
         <xsd:documentation>This operation should retrieve the details of an order for one of the following parameters,
				1.	The order number associated with an order
				2.	Mobile Phone Number</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderDetails_2Response" type="mod:getOrderDetails_2Response">
      <xsd:annotation>
         <xsd:documentation>This operation should retrieve the details of an order for an order identifier, provided an order is associated with the given order identifier.
				An additional CSA identifier needs to be provided in the input.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getOrderDetails_2Fault" type="xcore:SOAFaultType">
      <xsd:annotation>
         <xsd:documentation>SOA Fault</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="setConsignmentStateInOrder_1" type="mod:setConsignmentStateInOrder_1">
      <xsd:annotation>
         <xsd:documentation>This operation is used to update the status of each consignment of an order from stores.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="setConsignmentStateInOrder_1Response" type="mod:setConsignmentStateInOrder_1Response">
      <xsd:annotation>
         <xsd:documentation>This operation is used to update the status of each consignment of an order from stores.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="setConsignmentStateInOrder_1Fault" type="xcore:SOAFaultType">
      <xsd:annotation>
         <xsd:documentation>SOA Fault</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getConsignmentDetails_1" type="mod:getConsignmentDetails_1">
      <xsd:annotation>
         <xsd:documentation>This operation contain request element used to retrieve order details for a given order number, consignment number or store id.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getConsignmentDetails_1Response" type="mod:getConsignmentDetails_1Response">
      <xsd:annotation>
         <xsd:documentation>This is a response of getConsignmentDetails_1.</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <xsd:element name="getConsignmentDetails_1Fault" type="xcore:SOAFaultType">
      <xsd:annotation>
         <xsd:documentation>SOA Fault</xsd:documentation>
      </xsd:annotation>
   </xsd:element>
   <!--new operations-->
   <xsd:complexType name="getOrderList">
      <xsd:annotation>
         <xsd:documentation>The search is performed either on user's portalid, orange customer number or msisdn. In order to paginate the start position of the page and the page size needs to be provided to this operation.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice>
            <xsd:element name="portalId" type="xcore:portalIDType"/>
            <xsd:element name="customerNumber" type="pcp:typeHorizonCustomerNumber"/>
            <xsd:element name="msisdn" type="xcore:msisdnType"/>
         </xsd:choice>
         <xsd:element name="isArchiveOrderRequired" type="mod:isArchiveOrderRequiredType" minOccurs="0"/>
         <xsd:element name="ordersSelectionCriteria" type="mod:ordersSelectionCriteriaType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getOrderList_2">
      <xsd:annotation>
         <xsd:documentation>The search is performed either on user's portalid, orange customer number or msisdn. In order to paginate the start position of the page and the page size needs to be provided to this operation.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice>
            <xsd:element name="portalRegisterationDetails" type="pcp:portalRegistationIdDetailsType"/>
            <xsd:element name="customerNumber" type="pcp:typeHorizonCustomerNumber"/>
            <xsd:element name="msisdn" type="xcore:msisdnType"/>
         </xsd:choice>
         <xsd:element name="isArchiveOrderRequired" type="mod:isArchiveOrderRequiredType" minOccurs="0"/>
         <xsd:element name="ordersSelectionCriteria" type="mod:ordersSelectionCriteriaType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ordersSelectionCriteriaType">
      <xsd:annotation>
         <xsd:documentation>In order to paginate the start position of the page and the page size needs to be provided to this operation.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="startOrderNumber" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>Start position of the first page of results.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="numOrdersRequired" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>Number of orders required to be retrieved.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getOrderListResponse">
      <xsd:annotation>
         <xsd:documentation>This operation must retrieve a list of orders if one or more orders are associated with the user portal id, orange customer number or msisdn (mobile phone number). The orders should be retrieved in a chronologically descending order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="totalOrders" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>Total number of orders found for the search critera.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="ordersReturned" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>Number of orders returned.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="order" type="mod:orderSummaryType" maxOccurs="unbounded">
            <xsd:annotation>
               <xsd:documentation>Order List</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getOrderList_2Response">
      <xsd:annotation>
         <xsd:documentation>This operation must retrieve a list of orders if one or more orders are associated with the user portal id, orange customer number or msisdn (mobile phone number). The orders should be retrieved in a chronologically descending order. This operation will also return the early upgarde fee inclusive of the VAT incase paid for the order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="totalOrders" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>Total number of orders found for the search critera.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="ordersReturned" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>Number of orders returned.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="order" type="mod:order_2SummaryType" maxOccurs="unbounded" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Order List</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="orderSummaryType">
      <xsd:annotation>
         <xsd:documentation>Order List</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
         <xsd:element name="orderId" type="xsd:string"/>
         <xsd:element name="orderType" type="pcp:orderType"/>
         <xsd:element name="packageName" type="mod:packageName" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
               <xsd:documentation>This will be either the package name or the item name if the item was a  stand-alone item (ie not part of a package). e.g. Nokia 6210 Football Special, Siemens C35i base etc.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="orderDate" type="xsd:dateTime">
            <xsd:annotation>
               <xsd:documentation>Date on which the order was placed.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="orderStatus" type="pcp:orderStatusType"/>
         <xsd:element name="returnsOutstanding" type="pcp:typeYesOrNo" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Indicates whether there are any outstanding SKUs marked for return on this order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="partner" type="pcp:partnerType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Description of partner.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="isOrderArchive" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>A flag indicating whether this order is an archive order or not.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="order_2SummaryType">
      <xsd:annotation>
         <xsd:documentation>Order List inclusive of the upgrade fee.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
         <xsd:element name="orderId" type="xsd:string"/>
         <xsd:element name="orderType" type="pcp:orderType"/>
         <xsd:element name="packageName" type="mod:packageName" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
               <xsd:documentation>This will be either the package name or the item name if the item was a  stand-alone item (ie not part of a package). e.g. Nokia 6210 Football Special, Siemens C35i base etc.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="orderDate" type="xsd:dateTime">
            <xsd:annotation>
               <xsd:documentation>Date on which the order was placed.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="orderStatus" type="pcp:orderStatusType"/>
         <xsd:element name="returnsOutstanding" type="pcp:typeYesOrNo" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Indicates whether there are any outstanding SKUs marked for return on this order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="partner" type="pcp:partnerType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Description of partner.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="earlyUpgradeFee" type="pcp:paymentMoneyType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The upgrade fee payed by the customer, inclusive of the VAT amount. The element is populated only in case of the getOrderList_2 operatrion.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="isOrderArchive" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>A flag indicating whether this order is an archive order or not.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="packageName">
      <xsd:annotation>
         <xsd:documentation>Package is nothing but a saleable product. It will be a concatenation of all item (assigned product) names that this package (saleable product) consists of.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:minLength value="1"/>
         <xsd:maxLength value="500"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="getOrderDetails">
      <xsd:annotation>
         <xsd:documentation>This operation should retrieve the details of an order for an order identifier, provided an order is associated with the given order identifier.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="userId" type="pcp:csaIdType">
            <xsd:annotation>
               <xsd:documentation>It is the unique user id which is used to identify the initiator of the activity. For example customer service advisors will use their user Ids (csaId) to query the order details information.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice>
            <xsd:element name="orderNumber" type="pcp:orderNumberType">
               <xsd:annotation>
                  <xsd:documentation>Order number.</xsd:documentation>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="msisdn" type="xcore:msisdnType">
               <xsd:annotation>
                  <xsd:documentation>Mobile Phone Number. This (or orderNumber) is the key for the order that will be returned.</xsd:documentation>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
         <xsd:element name="isArchiveOrderRequired" type="mod:isArchiveOrderRequiredType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getOrderDetails_2">
      <xsd:annotation>
         <xsd:documentation>This operation should retrieve the details of an order for an order identifier, provided an order is associated with the given order identifier.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="userId" type="pcp:csaIdType">
            <xsd:annotation>
               <xsd:documentation>It is the unique user id which is used to identify the initiator of the activity. For example customer service advisors will use their user Ids (csaId) to query the order details information.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:choice>
            <xsd:element name="orderNumber" type="pcp:orderNumberType">
               <xsd:annotation>
                  <xsd:documentation>Order number.</xsd:documentation>
               </xsd:annotation>
            </xsd:element>
            <xsd:element name="msisdn" type="xcore:msisdnType">
               <xsd:annotation>
                  <xsd:documentation>Mobile Phone Number. This (or orderNumber) is the key for the order that will be returned.</xsd:documentation>
               </xsd:annotation>
            </xsd:element>
         </xsd:choice>
         <xsd:element name="isArchiveOrderRequired" type="mod:isArchiveOrderRequiredType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getOrderDetailsResponse">
      <xsd:annotation>
         <xsd:documentation>Following are the optional details of an order returned, if an order is associated with the order number or msisdn (mobile phone number), which can be a post pay, prepay or DISE.
						1.	General information about the order including the total order amount, order status and the portal id of the user who placed the order.
						2.	Package(s) and items associated with packages.
						3.	Payment in advance details
						4.	Delivery address details
						5.	Information about the credit check activity done as part of placing the order
						6.	Recurring payment details for paying for the order in instalments or periodic payments.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="responseCode" type="xsd:string"/>
         <xsd:element name="orderHeaderDetails" type="mod:orderHeaderDetailsType"/>
         <xsd:element name="orderDetails" type="mod:orderDetailsType"/>
         <xsd:element name="oneOffPaymentDetails" type="mod:oneOffPaymentDetailsType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>This is for the scenarios where Customer has paid for all or part of the order up front using a credit, debit card or assigned it to their post pay account. This will be populated in cases where handset or accessories have been purchased.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="deliveryDetails" type="mod:deliveryDetailsType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>This is the delivery details for the order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="creditCheckInfo" type="mod:creditCheckInfoType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The activity performed to check the credit capability of the customer.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="recurringPaymentdetails" type="mod:recurringPaymentDetailsType" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
               <xsd:documentation>This contains the details of the recurring payment for each Geneva account.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getOrderDetails_2Response">
      <xsd:annotation>
         <xsd:documentation>Following are the optional details of an order returned, if an order is associated with the order number or msisdn (mobile phone number), which can be a post pay, prepay or DISE.
						1.	General information about the order including the total order amount, order status and the portal id of the user who placed the order.
						2.	Package(s) and items associated with packages.
						3.	Payment in advance details
						4.	Delivery address details
						5.	Information about the credit check activity done as part of placing the order
						6.	Recurring payment details for paying for the order in instalments or periodic payments.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="responseCode" type="xsd:string"/>
         <xsd:element name="orderHeaderDetails" type="mod:orderHeaderDetails_2Type"/>
         <xsd:element name="orderDetails" type="mod:orderDetailsType"/>
         <xsd:element name="oneOffPaymentDetails" type="mod:oneOffPaymentDetailsType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>This is for the scenarios where Customer has paid for all or part of the order up front using a credit, debit card or assigned it to their post pay account. This will be populated in cases where handset or accessories have been purchased.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="deliveryDetails" type="mod:deliveryDetailsType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>This is the delivery details for the order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="creditCheckInfo" type="mod:creditCheckInfoType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The activity performed to check the credit capability of the customer.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="recurringPaymentdetails" type="mod:recurringPaymentDetailsType" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
               <xsd:documentation>This contains the details of the recurring payment for each Geneva account.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="setConsignmentStateInOrder_1">
      <xsd:annotation>
         <xsd:documentation>This operation is used to update the status of each consignment of an order from stores.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderNumber" type="mod:orderNumberType" maxOccurs="1"/>
         <xsd:choice>
            <xsd:element name="consignmentNumber" type="mod:consignmentNumberType" maxOccurs="1"/>
            <xsd:element name="dispatchReference" type="xsd:string" maxOccurs="1"/>
         </xsd:choice>
         <xsd:element name="orderStatus" type="mod:orderStatusType" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="updatedDateTime" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="source" type="mod:sourceType" minOccurs="1" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="setConsignmentStateInOrder_1Response">
      <xsd:annotation>
         <xsd:documentation>Response indicating the action for setting the status.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="result" type="xcore:ServiceResultType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="recurringPaymentDetailsType">
      <xsd:annotation>
         <xsd:documentation>This contains the details of the recurring payment for each Geneva account. There are four options for payment: bank, credit card, MTBilling and Geneva account.
				This will need to have a payment type defined and the geneva account number identifying the acount it refers to.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="cardNumber" type="xcore:maskedCardNumberType" minOccurs="0"/>
         <xsd:element name="cardDetails" type="mod:creditCardDetailsType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Credit card details of the card used for the payment mandate of the account.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="accountNumber" type="xcore:billingAccountNumberType">
            <xsd:annotation>
               <xsd:documentation>Geneva account number that the order corresponds to.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="bankDetails" type="mod:bankAccountType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>User acc (as typed in by Care screens), Bank acc (as returned by BMC), sort code and name.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="paymentMethod" type="pcp:paymentMethodType"/>
         <xsd:element name="bmcFailureReason" type="pcp:stringSize255" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Barron McCann failure string if card number or bank details fail CareX checks and they want to force the use of card no or bank details.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="billStyle" type="mod:billStyleDetailType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="billStyleDetailType">
      <xsd:annotation>
         <xsd:documentation>Bill style details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="isBillItemised" type="pcp:typeYesOrNo" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Y/N if the bill is itemised.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="isPaperBill" type="pcp:typeYesOrNo" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Y/N to Paper Bill Required.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="bankAccountType">
      <xsd:annotation>
         <xsd:documentation>Representation of bank details, including account holder name, sort code and account number.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="userAccountNumber" type="xcore:maskedBankAccountNumberType"/>
         <xsd:element name="bankAccountNumber" type="xcore:maskedBankAccountNumberType" minOccurs="0"/>
         <xsd:element name="bankSortCode" type="xcore:bankSortCodeType"/>
         <xsd:element name="bankAccountHolder" type="xcore:bankAccountHolderNameType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="creditCheckInfoType">
      <xsd:annotation>
         <xsd:documentation>Representation of information required for credit check details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="previousAddress" type="mod:previousAddressType" minOccurs="0"/>
         <xsd:element name="legalEntityAddress" type="mod:legalEntityAddressType">
            <xsd:annotation>
               <xsd:documentation>Address of the legal entity placing the order.  For a business order, it will be the company and for a consumer, it will be the orderer.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="creditCheckDetails" type="mod:creditCheckDetailsType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="legalEntityAddressType">
      <xsd:annotation>
         <xsd:documentation>Address of the legal entity placing the order. For a business order it will be the company.  For a consumer it will be the orderer.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="legalEntityName" type="mod:legalEntityNameType">
            <xsd:annotation>
               <xsd:documentation>Maximum value of 327 (comprising of title + space + forename + space + surname = a maximum of 20 + 1 + 255 + 1 + 50 = 327 - for consumers). Non Consumer type customers would have their Company Name put in the field.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="basicAddress" type="mod:basicAddressType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="legalEntityNameType">
      <xsd:restriction base="xsd:string">
         <xsd:maxLength value="327"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="previousAddressType">
      <xsd:annotation>
         <xsd:documentation>Previous address details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="addressStatus" type="xsd:integer" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Address status.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="basicAddress" type="mod:basicAddressType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="creditCheckDetailsType">
      <xsd:annotation>
         <xsd:documentation>Credit check details including the status of credit check, vet number, score and last credit check date.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="status" type="mod:creditCheckStatusType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>1 - UNCONDITIONALLY_ACCEPTED
						2 - CONDITIONALLY_ACCEPTED 3 - DEPOSIT 4 - REJECTED
						5 - REFERRED  6 - BROKEN  7 - NOT DONE	8 - DEPOSIT_100
						9 - DEPOSIT_POR  10 - DEPOSIT_100_POR 11 - POR_ONLY</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="vetNumber" type="mod:creditCheckVetNumberType" minOccurs="0"/>
         <xsd:element name="score" type="mod:creditCheckScoreType" minOccurs="0"/>
         <xsd:element name="lastCheckDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Date the credit check was last performed.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="creditClassId" type="pcp:creditClassIdType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The credit class to which this account belongs for the purpose of debt escalation [collections].It must be a valid identifier of a credit class that currently exists in the database. It must not be null.
						The values are:
						1=Consumer - High Risk
						2=Consumer - Medium Risk
						3=Consumer - Low Risk
						4=Consumer - High Risk
						5=Consumer - Medium Risk
						6=Consumer - Low Risk
						7=Consumer Cheque High Risk
						8=Consumer Cheque Low Risk
						9=Consumer DD or CCA
						10=SME Cheque High Risk
						11=SME Cheque Low Risk
						12=SME DD or CCA</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="creditCheckScoreType">
      <xsd:annotation>
         <xsd:documentation>Credit check Score.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:minLength value="1"/>
         <xsd:maxLength value="5"/>
         <xsd:pattern value="\-?\d{1,5}"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="creditCheckVetNumberType">
      <xsd:annotation>
         <xsd:documentation>Credit check Vet Number.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:maxLength value="11"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="creditCheckStatusType">
      <xsd:annotation>
         <xsd:documentation>1 - UNCONDITIONALLY_ACCEPTED
				2 - CONDITIONALLY_ACCEPTED 3 - DEPOSIT 4 - REJECTED
				5 - REFERRED  6 - BROKEN  7 - NOT DONE	8 - DEPOSIT_100
				9 - DEPOSIT_POR  10 - DEPOSIT_100_POR 11 - POR_ONLY</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:integer"/>
   </xsd:simpleType>
   <xsd:complexType name="deliveryDetailsType">
      <xsd:annotation>
         <xsd:documentation>Delivery details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="name" type="pcp:typeDescriptionSize80"/>
         <xsd:element name="basicAddress" type="mod:basicAddressType"/>
         <xsd:element name="companyName" type="mod:companyNameType" minOccurs="0"/>
         <xsd:element name="phone" type="pcp:telNumberType" minOccurs="0"/>
         <xsd:element name="fax" type="pcp:telNumberType" minOccurs="0"/>
         <xsd:element name="shippingMethod" type="pcp:typeDescriptionSize50" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="companyNameType">
      <xsd:restriction base="xsd:string">
         <xsd:minLength value="1"/>
         <xsd:maxLength value="100"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="basicAddressType">
      <xsd:annotation>
         <xsd:documentation>Basic address details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="addressLine1" type="pcp:houseNameOrNumber" minOccurs="0"/>
         <xsd:element name="addressLine2" type="xsd:string" minOccurs="0"/>
         <xsd:element name="addressLine3" type="xsd:string" minOccurs="0"/>
         <xsd:element name="addressLine4" type="xsd:string" minOccurs="0"/>
         <xsd:element name="country" type="pcp:alpha2CountryCodeType"/>
         <xsd:element name="postCode" type="xcore:postcodeType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="oneOffPaymentDetailsType">
      <xsd:annotation>
         <xsd:documentation>This is the one-off payment for the order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="paymentMethod" type="pcp:paymentMethodType" minOccurs="0"/>
         <xsd:element name="cardNumber" type="xcore:maskedCardNumberType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Mandatory when payment_method=CARD.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="cardDetails" type="mod:creditCardDetailsType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Card details. Mandatory when payment_method=CARD.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="paymentSettledDate" type="xsd:date" minOccurs="0"/>
         <xsd:element name="billingAccountNumber" type="xsd:string" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>This element is present when the payment is made as one off against a Geneva Billing account rather than for a credit card. Mandatory when payment_method is GENEVA. Not present for other values.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="creditCardDetailsType">
      <xsd:annotation>
         <xsd:documentation>Credit card details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="cardHolderName" type="xcore:cardHolderNameType">
            <xsd:annotation>
               <xsd:documentation>Name of the card holder</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="expiryDate" type="xcore:cardExpiryDateType">
            <xsd:annotation>
               <xsd:documentation>Expiry date of the card.  Zero or one. In format MM/YY</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="issueNumber" type="xcore:cardIssueNumberType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Issue number of the card.  Zero or one. 1 or 2 digits.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="cardType" type="mod:paymentCardType">
            <xsd:annotation>
               <xsd:documentation>Payment card types. CareX will hold the full textual description for this element locally.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="houseNameOrNum" type="pcp:houseNameOrNumber" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The house name or number that this card is registered to.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="postCode" type="xcore:postcodeType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The postcode that this card is registered to.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="paymentCardType">
      <xsd:annotation>
         <xsd:documentation>0,MAESTRO,CC 1,SOLO,CC 2,VISA,CC 3,MASTERCARD,CC
				4,DELTA,CC 5,AMEX,CC 6,RABOBANKBETALEN,CC
				7,EENMALIGEMACHTIGING,CC 8,CASHONDELIVERY,CC
				9,BANKOVERBOEKING,CC 10,VALUESTORE,CC
				11,MTBILLINGPORTAL,MT 12,MTBILLINGSHOP,MT 13,BANK,DD
				16,ELECTRON,CC 10001,MRINDIVIDUALPO,CC
				10002,MRSTANDINGPO,CC</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:integer"/>
   </xsd:simpleType>
   <xsd:complexType name="orderDetailsType">
      <xsd:annotation>
         <xsd:documentation>Represents all the packages and items on the order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="package" type="mod:packageType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="VATReceiptRequired" type="pcp:typeYesOrNo"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="packageType">
      <xsd:annotation>
         <xsd:documentation>Represents one package (Saleable Product) in an order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderLineKey" type="pcp:orderLineKeyType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Represent order line id, consists of order id and order line number.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="packageName" type="mod:packageNameType" minOccurs="0"/>
         <xsd:element name="mobileNumberPortingFlag" type="pcp:typeYesOrNo" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Mobile Number Porting.  Only relevant if the Package contains a SIM.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="price" type="pcp:paymentMoneyType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The individual cost of the saleable product. This is the cost to the customer including VAT and any discounts.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="originalNonDiscountedPrice" type="pcp:paymentMoneyType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Original non-discounted price, per saleable product (INCLUDING VAT), Shop may have applied a discount, comparing this with the price will indicate if this is the case. Introduced as part of Retention.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="systemSuggestedDiscountPrice" type="pcp:paymentMoneyType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The price inclusive of VAT (in pence) of a saleable product that the system suggests is offered to the customer in order to retain their business. It is used in retention analysis to compare the price offered by the Customer Service Agent with that accepted by the Customer.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="vatAmount" type="pcp:vatAmountType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>VAT rate and amount for this item</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="vatReversalReceiptStatus" type="pcp:vatReversalReceiptStatusType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>A status field which indicates whether the Saleable Product has been returned by the customer, and hence any necessary refunds and VAT adjustments have been made, such that a VAT Reversal receipt could be produced. Takes values  'R' - Ready for receipt production 'P' - Reversal receipt produced 'N' - Not Applicable (Default) 'X' -  Receipt not required.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="item" type="mod:itemType" maxOccurs="unbounded">
            <xsd:annotation>
               <xsd:documentation>Represents an item within this package.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="vatExclusivePrice" type="pcp:paymentMoneyType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="itemType">
      <xsd:annotation>
         <xsd:documentation>Representation of an item (Assigned Product) in a package (Saleable Product) within in order</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderLineKey" type="pcp:orderLineKeyType" minOccurs="0"/>
         <xsd:element name="assignNumber" type="pcp:assignNumberType" minOccurs="0"/>
         <xsd:element name="itemId" type="pcp:itemIdType">
            <xsd:annotation>
               <xsd:documentation>This value is from the productid of the assigned product relation.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="itemName" type="pcp:stringSize255">
            <xsd:annotation>
               <xsd:documentation>The item name.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="change" type="pcp:changeType"/>
         <xsd:element name="imei" type="xcore:imeiType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Only applicable to handset item.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="msisdn" type="xcore:msisdnType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Only applicable to SIM cards.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="shortCode" type="pcp:shortCodeType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>This element represents shortcode for ESME orders of category SAD or PTM where it represents the shortcode.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="ssn" type="pcp:ssnType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Only applicable to SIM cards. This will be appended to the itemName (of destProduct/destProductName) for displaying.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="serialNo" type="xsd:string" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>For any other serial numbers e.g. Laptop Serial Number</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="category" type="pcp:itemCategoryType">
            <xsd:annotation>
               <xsd:documentation>Category of the item.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="groupId" type="xsd:integer" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Allows multiple products to be associated together (e.g. a handset, sim and tariff).  It has to be unique at an order level and across saleable products. It may be null for a charger for example.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="handsetRisk" type="pcp:riskType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Handset Risk is mandatory for non-RFE orders</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="handsetMake" type="pcp:typeHandsetMake" minOccurs="0"/>
         <xsd:element name="handsetModel" type="pcp:typeHandsetModel" minOccurs="0"/>
         <xsd:element name="handsetReplacementGrade" type="pcp:handsetReplacementGradeType" minOccurs="0"/>
         <xsd:element name="warrantyOwner" type="mod:warrantyOwnerType" minOccurs="0"/>
         <xsd:element name="warrantyEndDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The end date of the warranty.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="status" type="xsd:integer" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The status that the orderline is currently in</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="mobileNumberPortingFlag" type="pcp:typeYesOrNo" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Mobile Number Porting.Only relevant if the item is a SIM.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="destProduct" type="mod:destProductType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>A physical item will have a dest_product (SKU), but a logical item will not.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="logicalProduct" type="mod:logicalProductType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The instance of a Logical product (LP) assigned to an individual Service Connection. Usually an alert service, Eg football scores; but also includes Insurance. The physical incarnation of this entity is primarily in the configuration information in the network required to deliver the service.
					If the Shop/Sales Channel has provisioned or attempted to provision the LP then the serviceFailureReason must be set. If this element is not set then it will be assumed that the LP has not been provisioned.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="l2MConnection" type="mod:l2MConnectionDetailsType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Land to mobile connection details. Only relevant if order is ESME order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="PTMshortcode" type="mod:PTMshortcodeType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>PTM shortcode details. Only relevant if order is an ESME order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="insuranceProduct" type="mod:insuranceProductType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>An insurance product - this may be part of a bundle, ie the saleable product has assigned products other than just this assigned insurance product. In that case, imei, msisdn and start date are optional, otherwise mandatory if this is the only assigned product for a saleable product
						If a product has been offered for free or discounted then the override amount, period and period type must be populated.</xsd:documentation>
               <xsd:documentation>An insurance product</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="chargeableDeliveryOptions" type="mod:deliveryOptionsType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Chargeable delivery option, for the order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="deliveryOptionsType">
      <xsd:annotation>
         <xsd:documentation>Delivery option details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="deliveryDate" type="xsd:date">
            <xsd:annotation>
               <xsd:documentation>Valid delivery date for the requested by the customer</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="despatchDate" type="xsd:date">
            <xsd:annotation>
               <xsd:documentation>Date the order will need to be sent to the logistics warehouse to achieve the requested delivery date</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="timeslot" type="xsd:string">
            <xsd:annotation>
               <xsd:documentation>Delivery option code that is valid on this delivery date.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="insuranceProductType">
      <xsd:annotation>
         <xsd:documentation>An insurance product - this may be part of a bundle, ie the saleable product has assigned products other than just this assigned insurance product.
				In that case, imei, msisdn and start date are optional, otherwise mandatory if this is the only assigned product for a saleable product
				If a product has been offered for free or discounted then the override amount, period and period type must be populated.</xsd:documentation>
         <xsd:documentation>An insurance product</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="imei" type="xcore:imeiType" minOccurs="0"/>
         <xsd:element name="msisdn" type="xcore:msisdnType" minOccurs="0"/>
         <xsd:element name="assignedProductStartDate" type="xsd:dateTime" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The date time that an assigned product should take effect or is initialised. For example the date time that insurance begins</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="assignedProductEndDate" type="xsd:dateTime" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The date time that an assigned product ceases or is cancelled. For example the date time that insurance ends</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="overridePrice" type="mod:overridePriceType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>If a product is discounted or free then this element will be populated.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="assignedProductBillingFreq" type="pcp:assignedProductBillingFreq"/>
         <xsd:element name="isCrossCharged" type="pcp:typeYesOrNo">
            <xsd:annotation>
               <xsd:documentation>A Y/N flag indicating whether or not the assigned product is cross charged to the master postpay billing account.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="PTMshortcodeType">
      <xsd:annotation>
         <xsd:documentation>PTM shortcode details. Only relevant if order is an ESME order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="secondaryProductId" type="pcp:itemIdType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Product id of any additional product for the shortcode - in this case the product that maps to the shortcode price point tariff.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="secondaryProductName" type="pcp:stringSize255" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Product name of any additional product for the shortcode - in this case the product that maps to the shortcode price point tariff.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="shortcodeCategoryId" type="pcp:typeDescriptionSize80">
            <xsd:annotation>
               <xsd:documentation>The current shortcode categories and their corrosponding short codes are Adult = 'AO',
							Adult e-money = 'AE', Chat = 'CO', Chat e-money = 'CE', Other = 'OO' and Other e-money = 'OE'. This element is not enumerated to allow the easy addition of new categories.
							The category is used by EAI to determine the billing description passed to Geneva.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="sourceAddressInfo" type="mod:sourceAddressInfoType" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="sourceAddressInfoType">
      <xsd:annotation>
         <xsd:documentation>For ESME : Holds information on the definition of the source address and the content to be supplied.  Each brief may be allocated to multiple source addresses.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="advertisedName" type="pcp:typeDescriptionSize80">
            <xsd:annotation>
               <xsd:documentation>The advertised name of the service provided by this source address</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="websiteAddress" type="pcp:stringSize255" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The address of the website on which this source address is advertised.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="serviceDescription" type="pcp:stringSize255"/>
         <xsd:element name="contentType" type="mod:contentType"/>
         <xsd:element name="ICSTISApproved" type="pcp:typeYesOrNo" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Whether the service is approved by ICSTIS if the content is chat or dating. A Y/N flag identifying whether approved.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="howToSubscribe" type="pcp:stringSize255">
            <xsd:annotation>
               <xsd:documentation>A textual description on how a customer subscribes to the source address content.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="howToUnsubscribe" type="pcp:stringSize255">
            <xsd:annotation>
               <xsd:documentation>A textual description on how a customer un-subscribes to the source address content.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="customerCarePhone" type="pcp:typeDescriptionSize20">
            <xsd:annotation>
               <xsd:documentation>The phone number of the customer care agent responsible for the source address content</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="subContractorName" type="pcp:stringSize255" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The name of the company if the source address is subcontracted out.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="contentType">
      <xsd:annotation>
         <xsd:documentation>A code identifying the type of content provided by this source address, for example ringtones, logs, games, chat.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:length value="1"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="packageNameType">
      <xsd:annotation>
         <xsd:documentation>Saleable product name.It will be a concatenation of all assigned product names that this saleable product consists of.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:minLength value="1"/>
         <xsd:maxLength value="500"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="l2MConnectionDetailsType">
      <xsd:annotation>
         <xsd:documentation>Land to mobile connection details. Only relevant if order is ESME order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="connection" type="mod:connectionType" maxOccurs="unbounded"/>
         <xsd:element name="sourceIPAddressList" type="mod:sourceIPAddressListType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="deliveryReportReqd" type="pcp:typeYesOrNo" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Whether delivery reports are required on the connection.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="sourceIPAddressListType">
      <xsd:annotation>
         <xsd:documentation>The list of additional source IP addresses used by the ESME for land to mobile connectivity.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="IPAddress" type="xsd:string">
            <xsd:annotation>
               <xsd:documentation>The IP Address used to connect to the internet in format nnn.nnn.nnn.nnn</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="IPAddressOwner" type="pcp:typeDescriptionSize20">
            <xsd:annotation>
               <xsd:documentation>The owner of the public IP Address.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="ISPRelationship" type="pcp:typeDescriptionSize20" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The relationship of the IP Address owner to the ESME.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="connectionType">
      <xsd:annotation>
         <xsd:documentation>The details of an ESME's connection</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="connectionMethod" type="mod:connectionMethodType"/>
         <xsd:element name="IPAddress" type="xsd:string"/>
         <xsd:element name="IPAddressOwner" type="pcp:typeDescriptionSize20"/>
         <xsd:element name="connectionName" type="pcp:typeDescriptionSize20" minOccurs="0"/>
         <xsd:element name="ISPRelationship" type="pcp:typeDescriptionSize20" minOccurs="0"/>
         <xsd:element name="ISPRelationshipDescr" type="xsd:string" minOccurs="0"/>
         <xsd:element name="kilostreamLink60Info" type="mod:kilostreamLink60InfoType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="kilostreamLink60InfoType">
      <xsd:annotation>
         <xsd:documentation>The kilostream or link 60 circuit information. This is required when adding a kilostream or link 60 circuit.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="existingLink" type="pcp:typeYesOrNo">
            <xsd:annotation>
               <xsd:documentation>Whether an existing kilostream link is to be used.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="O2ConnectionSite" type="mod:O2ConnectionSiteType"/>
         <xsd:element name="readyForServiceDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The date that the circuit is required for service.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="circuitNumber" type="pcp:typeDescriptionSize50">
            <xsd:annotation>
               <xsd:documentation>The kilostream circuit number.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="siteAddress" type="pcp:stringSize255">
            <xsd:annotation>
               <xsd:documentation>The address of the customer site (A end of the circuit) in a 'free-text' format.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="aggregateBearerRef" type="pcp:typeDescriptionSize50" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The aggregate bearer reference. Only required for Keybridge O2 connection site.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="aggregateLinkTimeslot" type="mod:aggregateLinkTimeslotType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="aggregateLinkTimeslotType">
      <xsd:annotation>
         <xsd:documentation>The timeslot in the aggregate link. Only required for Keybridge O2 connection site.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:integer">
         <xsd:minInclusive value="1"/>
         <xsd:maxInclusive value="30"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="O2ConnectionSiteType">
      <xsd:annotation>
         <xsd:documentation>Which O2 site the circuit is connected to. Current options are:
				Buckingham Avenue, Slough,Brunel Way, Slough,Elland, Halifax,Croydon, Surrey,
				Keybridge London.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:minLength value="1"/>
         <xsd:maxLength value="50"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="connectionMethodType">
      <xsd:annotation>
         <xsd:documentation>The connection method chosen by the ESME. The following values it can take,
				Internet
				Kilostream
				Link 60
				ISDN</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string"/>
   </xsd:simpleType>
   <xsd:complexType name="logicalProductType">
      <xsd:annotation>
         <xsd:documentation>The instance of a Logical product (LP) assigned to an individual Service Connection. Usually an alert service Eg football scores; but also includes Insurance. The physical incarnation of this entity is primarily in the configuration information in the network required to deliver the service.
				If the Shop/Sales Channel has provisioned or attempted to provision the LP then the serviceFailureReason must be set. If this element is not set then it will be assumed that the LP has not been provisioned.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="commonRegistryUserName" type="pcp:typeHorizonId"/>
         <xsd:element name="commonRegistryUserDomain" type="pcp:typeHorizonDomain"/>
         <xsd:element name="periodic" type="mod:periodicType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Must be populated if the Logical Product is PERIODIC. Note that a Logical Product may aslo be QUOTAed.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="quotaed" type="mod:quotaedType" minOccurs="0"/>
         <xsd:element name="overridePrice" type="mod:overridePriceType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="overridePriceType">
      <xsd:annotation>
         <xsd:documentation>If a product is discounted or free then this element should be populated with the details of the discount.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="assignedProductOverrideAmount" type="pcp:paymentMoneyType">
            <xsd:annotation>
               <xsd:documentation>The monetary value, in the lowest denomination, e.g. pence or cents, that the assigned product should be overriden with. This amount is used to apply, for example, discount or free pricing for a fixed period of time.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="assignedProductOverridePeriod" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>The period of time that an override price should be applied to an assigned product, measured in months.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="quotaedType">
      <xsd:annotation>
         <xsd:documentation>Must be populated if the Logical Product is QUOTA. Note that a Logical Product may also be PERIODIC.
				When extending an entitlement for a service which is NONPERIODIC_QUOTA, the maximumCount value is added to the user's credit balance for that
				application. It is not possible to alter a user's maximumCount for an existing
				periodic service - i.e. if a service is periodic (either unlimited or
				quota'd), the only modifications that can be made are to add additional periods.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="maximumCount" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>The maximum number of usage events of this service allowed within a period. When CREATING services which are PERIODIC QUOTA, it denotes the maximum no. of uses per period. When creating an entitlement for a service which is NONPERIODIC QUOTA, it denotes the total no. of allowed uses.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="periodicType">
      <xsd:annotation>
         <xsd:documentation>Must be populated if the Logical Product is PERIODIC. Note that a Logical Product may also be QUOTAed.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="periodRemaining" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>The number of periods remaining for an assigned product. Currently only applied to Logical Products . Range 1 - 99999.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="periodType" type="xsd:integer">
            <xsd:annotation>
               <xsd:documentation>The units that periodRemaining is measured in. valid values are 1 = week, 2 = month, 3 = year.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="destProductType">
      <xsd:annotation>
         <xsd:documentation>Destination product details - 'Hardware' tab on ORD05 and 'Returns' tab on ORD03.  Also known as SKUs.  Each physical item has a SKU.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="sku" type="pcp:skuType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>e.g. 044-01-01-002-0005-0001-0001-003.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="destProductName" type="pcp:stringSize255" minOccurs="0"/>
         <xsd:element name="returnReason" type="pcp:returnReasonCodeType"/>
         <xsd:element name="returnCondition" type="mod:returnConditionType"/>
         <xsd:element name="returnTimestamp" type="xsd:dateTime" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="returnConditionType">
      <xsd:annotation>
         <xsd:documentation>0 Not returned
				1 Damaged
				2 Faulty
				3 Incomplete
				4 Missing
				5 Good
				6 Used</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:integer"/>
   </xsd:simpleType>
   <xsd:simpleType name="warrantyOwnerType">
      <xsd:annotation>
         <xsd:documentation>A physical product will be covered by either the Manufacturer's Original Warranty or, in the case of an insurance replacement, by the Insurance Fulfilment Agent. Allowed values are MAN for manufacturer or DEX for Insurance Fulfilment Agent.
			Mandatory when adding an Insurance product, Not present when Removing (canceling a policy).

			Allowed values are:

			MAN - Manufacturer's Original Warranty
			DEX - insurance replacement, by the Insurance Fulfilment Agent</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="MAN"/>
         <xsd:enumeration value="DEX"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="orderHeaderDetailsType">
      <xsd:annotation>
         <xsd:documentation>Generic information about an order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
         <xsd:element name="orderDate" type="xsd:date"/>
         <xsd:element name="orderType" type="pcp:orderType">
            <xsd:annotation>
               <xsd:documentation>The following are the different order types,
						NE - New
						RE - Replacement
						UG - Upgrade
						ES - ESME
						EC - ESME Change Request</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="partner" type="pcp:partnerType" minOccurs="0"/>
         <xsd:element name="isOrderArchive" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>A flag indicating whether this order is an archive order or not.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="sourceOfSale" type="xsd:string" minOccurs="0"/>
         <xsd:element name="posBusinessUnit" type="pcp:typePosBusinessUnit" minOccurs="0"/>
         <xsd:element name="salesPerson" type="pcp:typeSalesPerson" minOccurs="0"/>
         <xsd:element name="salesManager" type="pcp:typeSalesPerson" minOccurs="0"/>
         <xsd:element name="orderStatus" type="pcp:orderStatusType"/>
         <xsd:element name="portalId" type="xcore:portalIDType"/>
         <xsd:element name="o2UserId" type="pcp:typeHorizonId" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>O2 User Id.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="userAlias" type="xsd:string" minOccurs="0"/>
         <xsd:element name="customerNumber" type="pcp:typeHorizonCustomerNumber" minOccurs="0"/>
         <xsd:element name="customerTier" type="xcore:customerTierType"/>
         <xsd:element name="proofOfId" type="pcp:proofOfIdType" minOccurs="0"/>
         <xsd:element name="proofOfResidence" type="pcp:proofOfResidenceType" minOccurs="0"/>
         <xsd:element name="orderTotalAmount" type="pcp:paymentMoneyType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Monetary value of the order in pence.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="returnReasonHeader" type="mod:returnReasonHeaderType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Order header level information about the returns.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="linkedOrderNum" type="pcp:orderNumberType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Order number of a linked order.  E.g.the upgrade order associated with this order, or vice versa.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="workflowIndicator" type="mod:workflowIndicatorType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Indicates where the order has come from and therefore which workflow is being followed UK or Netherlands.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="actualDeliveryDetails" type="mod:actualDeliveryDetailsType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="callReference" type="xsd:integer" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Used for commisions. tie upsell items to this order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="callTypeIndicator" type="mod:callTypeIndicator" minOccurs="0"/>
         <xsd:element name="vatTotal" type="pcp:paymentMoneyType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="orderHeaderDetails_2Type">
      <xsd:annotation>
         <xsd:documentation>Generic information about an order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
         <xsd:element name="orderDate" type="xsd:date"/>
         <xsd:element name="orderType" type="pcp:orderType">
            <xsd:annotation>
               <xsd:documentation>The following are the different order types,
						NE - New
						RE - Replacement
						UG - Upgrade
						ES - ESME
						EC - ESME Change Request</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="partner" type="pcp:partnerType" minOccurs="0"/>
         <xsd:element name="isOrderArchive" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>A flag indicating whether this order is an archive order or not.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="sourceOfSale" type="xsd:string" minOccurs="0"/>
         <xsd:element name="posBusinessUnit" type="pcp:typePosBusinessUnit" minOccurs="0"/>
         <xsd:element name="salesPerson" type="pcp:typeSalesPerson" minOccurs="0"/>
         <xsd:element name="salesManager" type="pcp:typeSalesPerson" minOccurs="0"/>
         <xsd:element name="orderStatus" type="pcp:orderStatusType"/>
         <xsd:element name="portalRegisterationDetails" type="pcp:portalRegistationIdDetailsType"/>
         <xsd:element name="o2UserId" type="pcp:typeHorizonId" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>O2 User Id.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="userAlias" type="xsd:string" minOccurs="0"/>
         <xsd:element name="customerNumber" type="pcp:typeHorizonCustomerNumber" minOccurs="0"/>
         <xsd:element name="customerTier" type="xcore:customerTierType"/>
         <xsd:element name="proofOfId" type="pcp:proofOfIdType" minOccurs="0"/>
         <xsd:element name="proofOfResidence" type="pcp:proofOfResidenceType" minOccurs="0"/>
         <xsd:element name="orderTotalAmount" type="pcp:paymentMoneyType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Monetary value of the order in pence.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="returnReasonHeader" type="mod:returnReasonHeaderType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Order header level information about the returns.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="linkedOrderNum" type="pcp:orderNumberType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Order number of a linked order.  E.g.the upgrade order associated with this order, or vice versa.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="workflowIndicator" type="mod:workflowIndicatorType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Indicates where the order has come from and therefore which workflow is being followed UK or Netherlands.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="actualDeliveryDetails" type="mod:actualDeliveryDetailsType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="callReference" type="xsd:integer" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Used for commisions. tie upsell items to this order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="callTypeIndicator" type="mod:callTypeIndicator" minOccurs="0"/>
         <xsd:element name="vatTotal" type="pcp:paymentMoneyType" minOccurs="0"/>
         <xsd:element name="upgradeDetails" type="mod:upgradeDetailsType" minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="callTypeIndicator">
      <xsd:annotation>
         <xsd:documentation>It takes the following values,
         	OUTBOUND	=	pro-active or
			INBOUND		=	reactive order
			This is used for commisions/retention.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="INBOUND"/>
         <xsd:enumeration value="OUTBOUND"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="actualDeliveryDetailsType">
      <xsd:annotation>
         <xsd:documentation>Actual delivery details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="consignmentNumber" type="pcp:typeDescriptionSize50" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Contains the courier's parcel shipping reference number for this order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="courierDeliveryOrder" type="pcp:typeDescriptionSize50" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Name of the carrier transporting the goods to the customer.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="courierServiceType" type="pcp:typeDescriptionSize50" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Courier service level that was used to dispatch the parcel.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="despatchDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Date that the  note for this order was generated.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="shippedFrom" type="pcp:typeDescriptionSize50" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>The organisation that fulfilled the order.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="returnReasonHeaderType">
      <xsd:annotation>
         <xsd:documentation>Represents all return information (order header level).Return Reason drop down value, and return reason free text.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="returnCode" type="pcp:returnReasonCodeType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Contains code for reason for return at order level.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="returnNotes" type="xsd:string" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Free text field containing reason for return (order level).</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="workflowIndicatorType">
      <xsd:annotation>
         <xsd:documentation>workflow where UK for United Kingdom order and NL for
				Netherlands order with the exention of one of the
				following; - NE - New, RE - Replacement, DC -
				Datacentric, ES - ESME, EC - ESME Change UG - Upgrade,
				IF - Inkfish, TS - Telesales, RT - Retail.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string"/>
   </xsd:simpleType>
   <xsd:complexType name="submitOrder">
      <xsd:annotation>
         <xsd:documentation>The request to submit an order request for a service.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderHeader" type="mod:orderHeaderType"/>
         <xsd:element name="orderSourceDetails" type="mod:orderSourceDetailsType"/>
         <xsd:element name="initialPaymentDetails" type="mod:initialPaymentDetailsType" minOccurs="0"/>
         <xsd:element name="CCADetails" minOccurs="0" maxOccurs="unbounded" type="mod:CCADetailsType"/>
         <xsd:element name="totalOrderPriceDetails" type="mod:totalOrderPriceDetailsType"/>
         <xsd:element name="saleableProducts" type="mod:saleableProductsType" maxOccurs="unbounded"/>
         <xsd:element name="accountSet" type="mod:accountSetType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="partySet" type="mod:partySetType" maxOccurs="unbounded"/>
         <xsd:element name="orderDeliveryDetails" type="mod:orderDeliveryDetailsType" minOccurs="0"/>
         <xsd:element name="orderCreditCheckDetails" type="mod:orderCreditCheckDetailsType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="orderHeaderType">
      <xsd:annotation>
         <xsd:documentation>Holds the identifies and run date for the order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
         <xsd:element name="orderPlacedByPartyReference" type="pcp:orderPlacedByPartyReferenceType"/>
         <xsd:element name="legalEntityPartyReference" type="pcp:legalEntityPartyReferenceType"/>
         <xsd:element name="orderTimestamp" type="xsd:dateTime"/>
         <xsd:element name="orderType" type="pcp:orderType"/>
         <xsd:element name="useValidateRules" type="pcp:typeYesOrNo" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="orderSourceDetailsType">
      <xsd:annotation>
         <xsd:documentation>Details of whom and from where the order originated</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderMethod" type="pcp:channelType"/>
         <xsd:element name="partner" type="pcp:partnerType"/>
         <xsd:element name="owningBusinessDivision" type="pcp:typeOwningBusinessDivision"/>
         <xsd:element name="sourceOfSale" type="pcp:typeSourceOfSale"/>
         <xsd:element name="posBusinessUnit" type="pcp:typePosBusinessUnit" minOccurs="0"/>
         <xsd:element name="salesPerson" type="pcp:typeSalesPerson" minOccurs="0"/>
         <xsd:element name="salesManager" type="pcp:typeSalesPerson" minOccurs="0"/>
         <xsd:element name="callContactID" type="pcp:callContactIDType" minOccurs="0"/>
         <xsd:element name="csaId" type="pcp:csaIdType" minOccurs="0"/>
         <xsd:element name="callTypeIndicator" type="pcp:callTypeIndicatorType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="initialPaymentDetailsType">
      <xsd:annotation>
         <xsd:documentation>This is the payment result returned by the Payment entity</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice>
            <xsd:element name="paymentByCard" type="mod:paymentByCardType"/>
            <xsd:element name="paymentAgainstAccount" type="mod:paymentAgainstAccountType"/>
         </xsd:choice>
         <xsd:element name="paymentMoney" type="pcp:paymentMoneyType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="paymentByCardType">
      <xsd:annotation>
         <xsd:documentation>InitialPaymentDetailsForInstallUsingCard - This field is used to give the details of the bank card used to pay for the initial charges</xsd:documentation>
      </xsd:annotation>
      <xsd:choice>
      <xsd:sequence>
         <xsd:element name="cardDetails" type="mod:oneOffCardDetailsType"/>
         <xsd:element name="paymentDetails" type="mod:paymentDetailsType"/>
      </xsd:sequence>
      <xsd:sequence>
      		<xsd:element name="cardReferenceDetails" type="mod:cardReferenceDetailsType"/>
      </xsd:sequence>
      </xsd:choice>
   </xsd:complexType>
   <xsd:complexType name="cardReferenceDetailsType">
   	<xsd:annotation>
   		<xsd:documentation>Structure containing detils of card references</xsd:documentation>
   	</xsd:annotation>
   	<xsd:sequence>
   		<xsd:element name="cardToken" type="xcore:cardTokenType"/>
   		<xsd:element name="cardReferencePaymentId" type="pcp:cardReferencePaymentIdType"/>
   		<xsd:element name="externalPaymentId" type="pcp:externalPaymentIdType" minOccurs="0"/>
   	</xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="oneOffCardDetailsType">
      <xsd:annotation>
         <xsd:documentation>The Bank Card details for one-off payments</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="cardNumber" type="xcore:cardNumberType"/>
         <xsd:element name="cardCV2" type="xcore:cardCV2Type" minOccurs="0"/>
         <xsd:element name="cardExpiryDate" type="xcore:cardExpiryDateType"/>
         <xsd:element name="cardHolderName" type="xcore:cardHolderNameType"/>
         <xsd:element name="cardIssueDate" type="xcore:cardIssueDateType" minOccurs="0"/>
         <xsd:element name="cardIssueNumber" type="xcore:cardIssueNumberType" minOccurs="0"/>
         <xsd:element name="addressPostCode" type="pcp:addressPostCodeType"/>
         <xsd:element name="addressHouseName" type="pcp:addressHouseNameType" minOccurs="0"/>
         <xsd:element name="addressHouseNumber" type="pcp:addressHouseNumberType" minOccurs="0"/>
         <xsd:element name="bankCardIssuer" type="pcp:cardIssuerType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="cardDetailsType">
      <xsd:annotation>
         <xsd:documentation>The Bank Card details</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="cardNumber" type="xcore:cardNumberType"/>
         <xsd:element name="cardExpiryDate" type="xcore:cardExpiryDateType"/>
         <xsd:element name="cardHolderName" type="xcore:cardHolderNameType"/>
         <xsd:element name="cardIssueDate" type="xcore:cardIssueDateType" minOccurs="0"/>
         <xsd:element name="cardIssueNumber" type="xcore:cardIssueNumberType" minOccurs="0"/>
         <xsd:element name="addressPostCode" type="pcp:addressPostCodeType"/>
         <xsd:element name="addressHouseName" type="pcp:addressHouseNameType" minOccurs="0"/>
         <xsd:element name="addressHouseNumber" type="pcp:addressHouseNumberType" minOccurs="0"/>
         <xsd:element name="bankCardIssuer" type="pcp:cardIssuerType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="paymentDetailsType">
      <xsd:annotation>
         <xsd:documentation>This is the payment result returned by the Payment entity</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="paymentAuthStatus" type="pcp:paymentAuthStatusType"/>
         <xsd:element name="authorisationRespCode" type="pcp:authorisationRespCodeType" minOccurs="0"/>
         <xsd:element name="authorisationRespMessage" type="pcp:authorisationRespMessageType" minOccurs="0"/>
         <xsd:element name="authorisationCode" type="pcp:authorisationCodeType" minOccurs="0"/>
         <xsd:element name="authMessage" type="pcp:authMessageType" minOccurs="0"/>
         <xsd:element name="buynetId" type="pcp:buynetIdType" minOccurs="0"/>
         <xsd:element name="settlementRespCode" type="pcp:authorisationRespCodeType" minOccurs="0"/>
         <xsd:element name="cv2AvsCode" type="pcp:cv2AvsCodeType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Response code from Buynet indicating validity of cv2 and avs details. Three digit code. If the buynetResponseCode is 625, then it is set to failed.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="cv2AvsAction" type="pcp:cv2AvsActionType" minOccurs="0"/>
         <xsd:element name="threeDSecure" type="pcp:threeDSecureType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="paymentAgainstAccountType">
      <xsd:annotation>
         <xsd:documentation>initial Payment Details For Install Account To Charge To - This field is used to give the details of the account that will pay for the initial charges</xsd:documentation>
      </xsd:annotation>
      <xsd:choice>
         <xsd:element name="accountSetReference" type="pcp:accountSetReferenceType"/>
         <xsd:element name="chargeToCrossChargeAccountReference" type="pcp:chargeToCrossChargeAccountReferenceType"/>
      </xsd:choice>
   </xsd:complexType>
   <xsd:complexType name="totalOrderPriceDetailsType">
      <xsd:annotation>
         <xsd:documentation>This holds the deatils of the totals for all the saleable products on the order</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="vatTotal" type="pcp:paymentMoneyType"/>
         <xsd:element name="vatCodeDescription" type="pcp:vatCodeDescriptionType"/>
         <xsd:element name="vatReceiptRequired" type="pcp:typeYesOrNo"/>
         <xsd:element name="vatExclusiveTotalPrice" type="pcp:paymentMoneyType"/>
         <xsd:element name="grandTotal" type="pcp:paymentMoneyType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="saleableProductsType">
      <xsd:annotation>
         <xsd:documentation>The salebale products that have been brought. Relates to the products within the catologue. Every install must have a least one of these.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="saleableProductLineNumber" type="pcp:saleableProductLineNumberType"/>
         <xsd:element name="saleableProductId" type="pcp:productIdType"/>
         <xsd:element name="saleableProductName" type="pcp:saleableProductNameType"/>
         <xsd:element name="saleableProductPrice" type="pcp:paymentMoneyType"/>
         <xsd:element name="vatRate" type="pcp:vatRateType"/>
         <xsd:element name="vatAmount" type="pcp:paymentMoneyType"/>
         <xsd:element name="vatExclusivePrice" type="pcp:paymentMoneyType"/>
         <xsd:element name="mobileAssignedProduct" type="mod:mobileAssignedProductType" minOccurs="0"/>
         <xsd:element name="generalProducts" type="mod:generalProductsType" minOccurs="0"/>
         <xsd:element name="accountSetReference" type="pcp:accountSetReferenceType" minOccurs="0"/>
         <xsd:element name="chargeToCrossChargeAccountReference" type="pcp:chargeToCrossChargeAccountReferenceType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="mobileAssignedProductType">
      <xsd:annotation>
         <xsd:documentation>Assigned Products for mobile services, includign pre pay and mobile broadband. Any of the child groups below this level can be combined with any others.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="accessory" type="mod:accessoryType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="handset" type="mod:handsetType" minOccurs="0"/>
         <xsd:element name="literature" type="mod:literatureType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="postpaySim" type="mod:postpaySimType" minOccurs="0"/>
         <xsd:element name="postpayTariff" type="mod:postpayTariffType" minOccurs="0"/>
         <xsd:element name="prepaySim" type="mod:prepaySimType" minOccurs="0"/>
         <xsd:element name="prepayTariff" type="mod:prepayTariffType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="accessoryType">
      <xsd:annotation>
         <xsd:documentation>Details need for accessories</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="make" type="pcp:makeType" minOccurs="0"/>
         <xsd:element name="model" type="pcp:modelType" minOccurs="0"/>
         <xsd:choice>
            <xsd:annotation>
               <xsd:documentation>If the client wishes the dispatcher to send out a device on it's behalf it should populate the dispatcherDetails, else if they have fulfilled the device already (e.g from a retail shop)  the client should send through all other required details in the other leg.</xsd:documentation>
            </xsd:annotation>
            <xsd:element name="skuDetailsWithSerialNumber" type="mod:skuDetailsWithSerialNumberType"/>
            <xsd:element name="dispatcherDetailsWithRisk" type="mod:dispatcherDetailsWithRiskType"/>
         </xsd:choice>
         <xsd:element name="orderProductPrice" type="pcp:orderProductPriceType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="skuDetailsWithSerialNumberType">
      <xsd:annotation>
         <xsd:documentation>skuDetails With Serial Number</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="skuId" type="pcp:skuIDType" minOccurs="0"/>
         <xsd:element name="skuName" type="pcp:skuNameType" minOccurs="0"/>
         <xsd:element name="serialNumber" type="pcp:serialNumberType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="skuDetailsWithImeiType">
      <xsd:annotation>
         <xsd:documentation>skuDetails With IMEI</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="skuId" type="pcp:skuIDType" minOccurs="0"/>
         <xsd:element name="skuName" type="pcp:skuNameType" minOccurs="0"/>
         <xsd:element name="imei" type="xcore:imeiType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="skuDetailsType">
      <xsd:annotation>
         <xsd:documentation>skuDetails</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="skuId" type="pcp:skuIDType" minOccurs="0"/>
         <xsd:element name="skuName" type="pcp:skuNameType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="skuDetailsWithSsnType">
      <xsd:annotation>
         <xsd:documentation>skuDetails With SSN</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="skuId" type="pcp:skuIDType" minOccurs="0"/>
         <xsd:element name="skuName" type="pcp:skuNameType" minOccurs="0"/>
         <xsd:element name="ssn" type="pcp:serialNumberType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="handsetType">
      <xsd:annotation>
         <xsd:documentation>Details needed for an new handset</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="handsetMake" type="pcp:typeHandsetMake"/>
         <xsd:element name="handsetModel" type="pcp:typeHandsetModel"/>
         <xsd:choice>
            <xsd:annotation>
               <xsd:documentation>If the client wishes the dispatcher to send out a device on it's behalf it should populate the dispatcherDetails, else if they have fulfilled the device already (e.g from a retail shop)  the client should send through all other required details in the other leg.</xsd:documentation>
            </xsd:annotation>
            <xsd:element name="skuDetailsWithImei" type="mod:skuDetailsWithImeiType"/>
            <xsd:element name="dispatcherDetailsWithRisk" type="mod:dispatcherDetailsWithRiskType"/>
         </xsd:choice>
         <xsd:element name="orderProductPrice" type="pcp:orderProductPriceType" minOccurs="0"/>
         <xsd:element name="CCANumber" type="pcp:CCANumberType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="literatureType">
      <xsd:annotation>
         <xsd:documentation>Details needed for literature</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:choice>
            <xsd:annotation>
               <xsd:documentation>If the client wishes the dispatcher to send out a device on it's behalf it should populate the dispatcherDetails, else if they have fulfilled the device already (e.g from a retail shop)  the client should send through all other required details in the other leg.</xsd:documentation>
            </xsd:annotation>
            <xsd:element name="skuDetails" type="mod:skuDetailsType"/>
            <xsd:element name="dispatcherDetails" type="mod:dispatcherDetailsType"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="dispatcherDetailsType">
      <xsd:annotation>
         <xsd:documentation>SKU identifier and name - alphanumeric. Both skuId and skuName attributes are mandatory if it required for the distribution centre to send the product out</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="skuId" type="pcp:skuIDType"/>
         <xsd:element name="skuName" type="pcp:skuNameType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="dispatcherDetailsWithRiskType">
      <xsd:annotation>
         <xsd:documentation>SKU identifier and name - alphanumeric. Both skuId and skuName attributes are mandatory if it required for the distribution centre to send the product out</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="skuId" type="pcp:skuIDType"/>
         <xsd:element name="skuName" type="pcp:skuNameType"/>
         <xsd:element name="risk" type="pcp:riskType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="postpaySimType">
      <xsd:annotation>
         <xsd:documentation>Details of any post pay sims. The Auto sim swap element should be set to Y if the client requires EAI to automatically perform a sim swap. Therefore activating the sim without the customer having to contact care. This is useful when the customers current ssn isn't working or is lost / damaged.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="msisdn" type="xcore:msisdnType" minOccurs="0"/>
         <xsd:element name="migratePortInDetailsType" type="mod:migratePortInDetailsType" minOccurs="0"/>
         <xsd:choice>
            <xsd:annotation>
               <xsd:documentation>If the client wishes the dispatcher to send out a device on it's behalf it should populate the dispatcherDetails, else if they have fulfilled the device already (e.g from a retail shop)  the client should send through all other required details in the other leg.</xsd:documentation>
            </xsd:annotation>
            <xsd:element name="skuDetailsWithSsn" type="mod:skuDetailsWithSsnType"/>
            <xsd:element name="dispatcherDetails" type="mod:dispatcherDetailsType"/>
         </xsd:choice>
         <xsd:element name="orderProductPrice" type="pcp:orderProductPriceType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="migratePortInDetailsType">
      <xsd:annotation>
         <xsd:documentation>Field that should be populated if as part of the order we wish to perform a Port In or Migrate</xsd:documentation>
      </xsd:annotation>
      <xsd:choice>
         <xsd:element name="instantMigration" type="pcp:typeYes"/>
         <xsd:element name="portIn" type="mod:portInType"/>
      </xsd:choice>
   </xsd:complexType>
   <xsd:complexType name="portInType">
      <xsd:annotation>
         <xsd:documentation>The client wants to portIn is old MSISDN to O2.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="pac" type="pcp:pacType"/>
         <xsd:element name="newMSISDN" type="xcore:msisdnType"/>
         <xsd:element name="pacExpiry" type="xsd:date" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="postpayTariffType">
      <xsd:annotation>
         <xsd:documentation>Details of any the post pay base tariff if a tariff transfer is required as part of the install. Additional services may also be included under installTAM</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="tariffModifier" type="mod:tariffModifierType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="orderProductCharge" type="pcp:orderProductChargeType" minOccurs="0"/>
         <xsd:element name="contractTerm" type="pcp:contractTermType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="tariffModifierType">
      <xsd:annotation>
         <xsd:documentation>Details of any additional services that are required</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="orderProductCharge" type="pcp:orderProductChargeType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="prepaySimType">
      <xsd:annotation>
         <xsd:documentation>Details of any pre pay sims.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="msisdn" type="xcore:msisdnType" minOccurs="0"/>
         <xsd:choice>
            <xsd:annotation>
               <xsd:documentation>If the client wishes the dispatcher to send out a device on it's behalf it should populate the dispatcherDetails, else if they have fulfilled the device already (e.g from a retail shop)  the client should send through all other required details in the other leg.</xsd:documentation>
            </xsd:annotation>
            <xsd:element name="skuDetailsWithSsn" type="mod:skuDetailsWithSsnType"/>
            <xsd:element name="dispatcherDetails" type="mod:dispatcherDetailsType"/>
         </xsd:choice>
         <xsd:element name="orderProductPrice" type="pcp:orderProductPriceType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="prepayTariffType">
      <xsd:annotation>
         <xsd:documentation>Details of any pre pay base tariff if a tariff transfer is required as part of the install.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="orderProductPrice" type="pcp:orderProductPriceType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="generalProductsType">
      <xsd:annotation>
         <xsd:documentation>Any of the child groups below this level can be combined with any others.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="chargeableDeliveryOption" type="mod:chargeableDeliveryOptionType" minOccurs="0"/>
         <xsd:element name="postpayInsurance" type="mod:postpayInsuranceType" minOccurs="0"/>
         <xsd:element name="prepayInsurance" type="mod:prepayInsuranceType" minOccurs="0"/>
         <xsd:element name="standardDeliveryCharge" type="mod:standardDeliveryChargeType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="chargeableDeliveryOptionType">
      <xsd:annotation>
         <xsd:documentation>Details of the chargeable delivery options. The actual details of timeslots and address details are held in the delivery details section on the main branch. This section is just for charging purposes. Only used for online where the customer has not received the goods.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="orderProductPrice" type="pcp:orderProductPriceType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="postpayInsuranceType">
      <xsd:annotation>
         <xsd:documentation>Details needed for an insurance related to a post pay account. NOTE post pay doesn't refer to how the insurance has will be paid for but the type of msisdn it's related to.
					If client chooses to change insurance two options are available. A straightforward  cancel of the existing insurance. Or the client may add insurance. If the client chooses this option if there is any existing insurance it will be removed and replaced with the new insurance.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="imei" type="xcore:imeiType" minOccurs="0"/>
         <xsd:element name="msisdn" type="xcore:msisdnType" minOccurs="0"/>
         <xsd:element name="serialNumber" type="pcp:serialNumberType" minOccurs="0"/>
         <xsd:choice>
            <xsd:element name="cancelExistingInsurance" type="mod:cancelExistingInsuranceType"/>
            <xsd:element name="addNewInsurance" type="mod:addNewInsuranceType"/>
         </xsd:choice>
         <xsd:choice minOccurs="0">
            <xsd:element name="orderProductPrice" type="pcp:orderProductPriceType"/>
            <xsd:element name="orderProductCharge" type="pcp:orderProductChargeType"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="prepayInsuranceType">
      <xsd:annotation>
         <xsd:documentation>Details needed for an insurance related to a pre pay account. NOTE pre pay doesn't refer to how the insurance has will be paid for but the type of msisdn it's related to.
					If client chooses to change insurance two options are available. A straightforward  cancel of the existing insurance. Or the client may add insurance. If the client chooses this option if there is any existing insurance it will be removed and replaced with the new insurance.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="imei" type="xcore:imeiType" minOccurs="0"/>
         <xsd:element name="msisdn" type="xcore:msisdnType" minOccurs="0"/>
         <xsd:element name="serialNumber" type="pcp:serialNumberType" minOccurs="0"/>
         <xsd:choice>
            <xsd:element name="cancelExistingInsurance" type="mod:cancelExistingInsuranceType"/>
            <xsd:element name="addNewInsurance" type="mod:addNewInsuranceType"/>
         </xsd:choice>
         <xsd:choice minOccurs="0">
            <xsd:element name="orderProductPrice" type="pcp:orderProductPriceType"/>
            <xsd:element name="orderProductCharge" type="pcp:orderProductChargeType"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="cancelExistingInsuranceType">
      <xsd:annotation>
         <xsd:documentation>A straightforward  cancel of the existing insurance.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="insuranceEndDate" type="xsd:dateTime"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="addNewInsuranceType">
      <xsd:annotation>
         <xsd:documentation>Add insurance. If the client chooses this option if there is any existing insurance it will be removed and replaced with the new insurance.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="assignedProductBillingFreq" type="pcp:assignedProductBillingFreq"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="standardDeliveryChargeType">
      <xsd:annotation>
         <xsd:documentation>Details of the standard delivery charge. The actual details of timeslots and address details are held in the delivery details section on the main branch. This section is just for charging purposes. Only used for online where the customer has not received the goods.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="assignedProductNumber" type="pcp:assignedProductNumberType"/>
         <xsd:element name="orderProductPrice" type="pcp:orderProductPriceType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="accountSetType">
      <xsd:annotation>
         <xsd:documentation>The list of Accounts and account information we will use for this order. We will need at lest one element if the order includes any post pay products.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="accountSetReference" type="pcp:accountSetReferenceType"/>
         <xsd:choice>
            <xsd:element name="existingAccount" type="mod:existingAccountType"/>
            <xsd:element name="newAccount" type="mod:newAccountType"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="existingAccountType">
      <xsd:annotation>
         <xsd:documentation>Associate the Order with an Existing O2 Companion Account</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="billingAccountNumber" type="xcore:billingAccountNumberType"/>
         <xsd:element name="billingCustomerNumber" type="xcore:billingAccountNumberType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="newAccountType">
      <xsd:annotation>
         <xsd:documentation>Create a new Billing account to associate the order to</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="billingAccountName" type="pcp:billingAccountNameType"/>
         <xsd:element name="accountBillingContactReference" type="pcp:accountBillingContactReferenceType"/>
         <xsd:element name="accountLegalEntityReference" type="pcp:accountLegalEntityReferenceType"/>
         <xsd:element name="accountAdditionalChooserReference" type="pcp:accountAdditionalChooserReferenceType" minOccurs="0"/>
         <xsd:element name="billingCustomerNumber" type="xcore:billingAccountNumberType" minOccurs="0"/>
         <xsd:element name="accountRecurringPaymentDetails" type="mod:accountRecurringPaymentDetailsType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="accountRecurringPaymentDetailsType">
      <xsd:annotation>
         <xsd:documentation>The account recurring payment can either be made using a credit card or direct debit</xsd:documentation>
      </xsd:annotation>
      <xsd:choice>
         <xsd:element name="creditCardDetails" type="mod:cardDetailsType"/>
         <xsd:element name="directDebitDetails" type="mod:directDebitDetailsType"/>
         <xsd:element name="chequePayments" type="pcp:chequePaymentsType"/>
      </xsd:choice>
   </xsd:complexType>
   <xsd:complexType name="directDebitDetailsType">
      <xsd:annotation>
         <xsd:documentation>This field contains bank information used if the continuous payments will be made by Direct Debit</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="userAccountNumber" type="pcp:userBankAccountNumberType"/>
         <xsd:element name="bankAccountNumber" type="xcore:bankAccountNumberType" minOccurs="0"/>
         <xsd:element name="bankSortCode" type="xcore:bankSortCodeType"/>
         <xsd:element name="bankAccountName" type="xcore:bankAccountHolderNameType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="partySetType">
      <xsd:annotation>
         <xsd:documentation>The list of customers and customer information we will use for this order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="partySetReference" type="pcp:partySetReferenceType"/>
         <xsd:choice>
            <xsd:element name="existingParty" type="mod:existingPartyType"/>
            <xsd:element name="newParty" type="mod:newPartyType"/>
         </xsd:choice>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="newPartyType">
      <xsd:annotation>
         <xsd:documentation>This should be used for new customers whose common registration account(orange account) has still to be set up</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="personalDetails" type="mod:personalDetailsType"/>
         <xsd:element name="contactDetails" type="mod:contactDetailsType" minOccurs="0"/>
         <xsd:element name="customerProfile" type="mod:customerProfileType"/>
         <xsd:element name="currentAddress" type="mod:addressType"/>
         <xsd:element name="previousAddress1" type="mod:addressType" minOccurs="0"/>
         <xsd:element name="previousAddress2" type="mod:addressType" minOccurs="0"/>
         <xsd:element name="proofs" type="mod:proofsType" minOccurs="0"/>
         <xsd:element name="company" type="mod:companyType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="existingPartyType">
      <xsd:annotation>
         <xsd:documentation>This should be used for clients who have already created the customer details in common registration or are using an existing customer</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="existingDetails" type="mod:existingDetailsType"/>
         <xsd:element name="personalDetails" type="mod:personalDetailsType"/>
         <xsd:element name="contactDetails" type="mod:contactDetailsType" minOccurs="0"/>
         <xsd:element name="customerProfile" type="mod:customerProfileType"/>
         <xsd:element name="currentAddress" type="mod:addressType"/>
         <xsd:element name="previousAddress1" type="mod:addressType" minOccurs="0"/>
         <xsd:element name="previousAddress2" type="mod:addressType" minOccurs="0"/>
         <xsd:element name="proofs" type="mod:proofsType" minOccurs="0"/>
         <xsd:element name="company" type="mod:companyType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="existingDetailsType">
      <xsd:annotation>
         <xsd:documentation>It is an existing customer it will hold the customer existing details such as ORANGE customer number</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="customerNumber" type="pcp:typeHorizonCustomerNumber"/>
         <xsd:element name="commonRegistryUserName" type="pcp:typeHorizonId"/>
         <xsd:element name="commonRegistryUserDomain" type="pcp:typeHorizonDomain"/>
         <xsd:element name="commonRegistryUserPassword" type="pcp:passwordType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="personalDetailsType">
      <xsd:annotation>
         <xsd:documentation>The customers Personal details such as name and date of birth</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="partyTitle" type="pcp:partyTitleType"/>
         <xsd:element name="partyForename" type="pcp:partyForenameType"/>
         <xsd:element name="partyMiddleName" type="pcp:partyMiddleNameType" minOccurs="0"/>
         <xsd:element name="partySurname" type="pcp:partySurnameType"/>
         <xsd:element name="dateOfBirth" type="xsd:date" minOccurs="0"/>
         <xsd:element name="adultUser" type="pcp:typeYesOrNo" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="contactDetailsType">
      <xsd:annotation>
         <xsd:documentation>the customers contact details such as mobile phone number or email address</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="emailAddress" type="xcore:emailAddressType" minOccurs="0"/>
         <xsd:element name="homePhoneNumber" type="pcp:telNumberType" minOccurs="0"/>
         <xsd:element name="mobilePhoneNumber" type="xcore:msisdnType" minOccurs="0"/>
         <xsd:element name="faxNumber" type="pcp:telNumberType" minOccurs="0"/>
         <xsd:element name="businessNumber" type="pcp:telNumberType" minOccurs="0"/>
         <xsd:element name="preferredContactMethod" type="pcp:preferredContactMethodType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="customerProfileType">
      <xsd:annotation>
         <xsd:documentation>The customer type and preferences such as acceptsO2Marketing</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="customerType" type="pcp:customerTypeTextType"/>
         <xsd:element name="acceptO2Marketing" type="pcp:typeYesOrNo" minOccurs="0"/>
         <xsd:element name="acceptOtherMarketing" type="pcp:typeYesOrNo" minOccurs="0"/>
         <xsd:element name="segmentation" type="pcp:segmentation" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="addressType">
      <xsd:annotation>
         <xsd:documentation>The customers current Address</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="addressHouseName" type="pcp:addressHouseNameType" minOccurs="0"/>
         <xsd:element name="addressHouseNumber" type="pcp:addressHouseNumberType" minOccurs="0"/>
         <xsd:element name="address1stLine" type="pcp:address1stLineType"/>
         <xsd:element name="address2ndLine" type="pcp:address2ndLineType" minOccurs="0"/>
         <xsd:element name="addressDistrict" type="pcp:addressDistrictType" minOccurs="0"/>
         <xsd:element name="addressTown" type="pcp:addressTownType" minOccurs="0"/>
         <xsd:element name="addressCounty" type="pcp:addressCountyType" minOccurs="0"/>
         <xsd:element name="addressPostCode" type="pcp:addressPostCodeType"/>
         <xsd:element name="postalCountry" type="pcp:alpha2CountryCodeType"/>
         <xsd:element name="equifaxPTCABSID" type="pcp:equifaxPTCABSIDType" minOccurs="0"/>
         <xsd:element name="addressValidationStatus" type="pcp:addressValidationStatusType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="deliveryAddressType">
      <xsd:annotation>
         <xsd:documentation>The customers current Address</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="addressHouseName" type="pcp:addressHouseNameType" minOccurs="0"/>
         <xsd:element name="addressHouseNumber" type="pcp:addressHouseNumberType" minOccurs="0"/>
         <xsd:element name="address1stLine" type="pcp:address1stLineType"/>
         <xsd:element name="address2ndLine" type="pcp:address2ndLineType" minOccurs="0"/>
         <xsd:element name="addressDistrict" type="pcp:addressDistrictType" minOccurs="0"/>
         <xsd:element name="addressTown" type="pcp:addressTownType" minOccurs="0"/>
         <xsd:element name="addressCounty" type="pcp:addressCountyType" minOccurs="0"/>
         <xsd:element name="addressPostCode" type="pcp:addressPostCodeType"/>
         <xsd:element name="postalCountry" type="pcp:alpha2CountryCodeType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="proofsType">
      <xsd:annotation>
         <xsd:documentation>Proofs of Address and Identity provided by the customer</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="proofOfAddressDetails" type="mod:proofOfAddressDetailsType" minOccurs="0"/>
         <xsd:element name="proofOfIdentityDetails" type="mod:proofOfIdentityDetailsType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="proofOfAddressDetailsType">
      <xsd:annotation>
         <xsd:documentation>Proof Of Adress information provided by the customer</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="proofOfAddress" type="pcp:proofOfAddressType"/>
         <xsd:element name="proofOfAddressDate" type="xsd:date"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="proofOfIdentityDetailsType">
      <xsd:annotation>
         <xsd:documentation>Proof of Identity Information provided by the customer</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="proofOfIdentity" type="pcp:proofOfIdentityType"/>
         <xsd:element name="proofOfIdentityReference" type="pcp:proofOfIdentityReferenceType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="companyType">
      <xsd:annotation>
         <xsd:documentation>If the order was placed for a company this will contain information such as Contact number and Contact name.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="jobTitle" type="pcp:jobTitleType"/>
         <xsd:element name="jobFunction" type="pcp:jobFunctionType"/>
         <xsd:element name="companyName" type="pcp:companyNameType"/>
         <xsd:element name="companyRegistrationNo" type="pcp:companyRegistrationNoType"/>
         <xsd:element name="companyPhoneNumber" type="pcp:companyPhoneNumberType"/>
         <xsd:element name="numberOfEmployees" type="xsd:int"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="orderDeliveryDetailsType">
      <xsd:annotation>
         <xsd:documentation>Should only be populated if physical items are needed to be dispatched, for example in an online situation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice>
            <xsd:element name="chargeableDeliveryOption" type="mod:placeChargeableDeliveryOptionType"/>
            <xsd:element name="isStandardDeliveryOption" type="pcp:typeYes"/>
         </xsd:choice>
         <xsd:element name="destinationName" type="pcp:destinationNameType"/>
         <xsd:element name="deliveryContactNumber" type="pcp:telNumberType" minOccurs="0"/>
         <xsd:element name="storeDetails" type="mod:storeDetailsType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="deliveryAddress" type="mod:deliveryAddressType"/>
         <xsd:element name="deliveryAddressModified" type="pcp:typeYesOrNo"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="placeChargeableDeliveryOptionType">
      <xsd:annotation>
         <xsd:documentation>Chargeable delivery option, for the order</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="deliveryDate" type="xsd:date"/>
         <xsd:element name="despatchDate" type="xsd:date"/>
         <xsd:element name="timeslot" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="orderCreditCheckDetailsType">
      <xsd:annotation>
         <xsd:documentation>This field should be populated if we have information resulting of a Credit Check call to a Credit Bureau</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="creditCheckStatus" type="pcp:creditCheckStatusType"/>
         <xsd:element name="creditVetDetails" type="mod:creditVetDetailsType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="creditVetDetailsType">
      <xsd:annotation>
         <xsd:documentation>If credit Vet Was made sucessfully</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="creditVetNumber" type="pcp:creditVetNumberType"/>
         <xsd:element name="creditScore" type="pcp:creditScoreType" minOccurs="0"/>
         <xsd:element name="lastCreditCheckDate" type="xsd:date"/>
         <xsd:element name="creditClassId" type="pcp:creditClassIdType" minOccurs="0"/>
         <xsd:element name="depositDetails" type="mod:depositDetailsType" minOccurs="0"/>
         <xsd:element name="transactCreditCheckDetails" type="mod:transactCreditCheckDetailsType" minOccurs="0"/>
         <xsd:element name="referralReason" type="pcp:referralReasonType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="depositDetailsType">
      <xsd:annotation>
         <xsd:documentation>Information about any deposits done on the order</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="depositKind" type="pcp:depositKindType"/>
         <xsd:element name="depositAmount" type="pcp:paymentMoneyType"/>
         <xsd:element name="depositDuration" type="xsd:integer"/>
         <xsd:element name="depositReference" type="pcp:depositReferenceType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="transactCreditCheckDetailsType">
      <xsd:annotation>
         <xsd:documentation>Extra Details of the Credit Check. Returned by Transact.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="creditCheckResultCode" type="pcp:creditCheckResultCodeType"/>
         <xsd:element name="totalMonthlyCharge" type="pcp:totalMonthlyChargeType"/>
         <xsd:element name="creditLimit" type="pcp:creditLimitType" minOccurs="0"/>
         <xsd:element name="conditionalBars" type="mod:conditionalBarsType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="conditionalBarsType">
      <xsd:annotation>
         <xsd:documentation>Identifies what Bars are active in the Order</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="internationalBar" type="pcp:typeYesOrNo"/>
         <xsd:element name="premiumBar" type="pcp:typeYesOrNo"/>
         <xsd:element name="roamingBar" type="pcp:typeYesOrNo"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="submitOrderResponse">
      <xsd:annotation>
         <xsd:documentation>The response for util submit install order. The accept status can only be SUCCESSFUL. Any errors will be shown in the error report</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="responseHeader" type="mod:responseHeaderType"/>
         <xsd:element name="acceptStatus" type="pcp:outcomeType"/>
         <xsd:element name="ruleOutcome" type="mod:ruleOutcomeType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ruleOutcomeType">
      <xsd:annotation>
         <xsd:documentation>If in the request it was specified to use Validation rules against the Order, this will contain the results.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="ruleValidateCheck" type="pcp:ruleValidateCheckType"/>
         <xsd:element name="ruleValidationString" type="pcp:ruleValidationStringType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="responseHeaderType">
      <xsd:annotation>
         <xsd:documentation>Holds the identifies and run date for the order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
         <xsd:element name="orderTimestamp" type="xsd:dateTime"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="isArchiveOrderRequiredType">
      <xsd:annotation>
         <xsd:documentation>A simple type to denote whether archive orders are required.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:boolean"/>
   </xsd:simpleType>
   <xsd:complexType name="upgradeDetailsType">
      <xsd:annotation>
         <xsd:documentation>Optional group which will contain the early upgrade details for upgrade orders if they we included in the order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="earlyUpgradeFee" type="pcp:paymentMoneyType" minOccurs="0"/>
         <xsd:element name="earlyUpgradeReference" type="xsd:long" minOccurs="0"/>
         <xsd:element name="earlyUpgradeOffered" type="pcp:typeYesOrNo"/>
         <xsd:element name="earlyUpgradeTaken" type="pcp:typeYesOrNo"/>
         <xsd:element name="upgradeOverrideApplied" type="pcp:typeYesOrNo"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getDeliveryOptions_1">
      <xsd:annotation>
         <xsd:documentation>Request of getDeliveryOptions_1 operation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderType" type="pcp:orderType"/>
         <xsd:element name="orderDate" type="xsd:date"/>
         <xsd:element name="postCode" type="xcore:postcodeType"/>
         <xsd:element name="isActiveReplacement" type="pcp:typeYesOrNo" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getDeliveryOptions_1Response">
      <xsd:annotation>
         <xsd:documentation>Response of getDeliveryOptions_1 operation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="listOfDeliveryOptions" type="mod:listOfDeliveryOptionsType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="listOfDeliveryOptionsType">
      <xsd:annotation>
         <xsd:documentation>List of delivery options</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="deliveryOption" type="mod:deliveryOptionType" minOccurs="1" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="deliveryOptionType">
      <xsd:annotation>
         <xsd:documentation>Type describing the delivery option</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="deliveryDate" type="xsd:date"/>
         <xsd:element name="requestedDespatchDate" type="xsd:date"/>
         <xsd:element name="timeSlot" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="submitUpgradeOrder_1">
      <xsd:annotation>
         <xsd:documentation>The request to submit an upgrade order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
         <xsd:element name="upgradeMsisdn" type="xcore:msisdnType"/>
         <xsd:element name="customerNumber" type="pcp:typeHorizonCustomerNumber"/>
         <xsd:element name="orderTimeStamp" type="xsd:dateTime" minOccurs="0"/>
         <xsd:element name="sourceDetails" type="mod:upgradeSourceDetailsType"/>
         <xsd:element name="initialPaymentDetails" type="mod:upgradeInitialPaymentDetailsType" maxOccurs="1" minOccurs="0"/>
         <xsd:element name="orderTotalDetails" type="mod:upgradeOrderTotalDetailsType"/>
         <xsd:element name="upgradeDiscounts" type="mod:upgradeDiscountsType"/>
         <xsd:element name="CCADetails" minOccurs="0" maxOccurs="1" type="mod:CCADetailsType"/>
         <xsd:element name="upgradeEntitlementDetails" type="mod:upgradeEntitlementDetailsType" minOccurs="0"/>
         <xsd:element name="saleableProducts" type="mod:upgradeSaleableProductsType" maxOccurs="unbounded" minOccurs="1"/>
         <xsd:element name="deliveryDetails" type="mod:upgradeDeliveryDetailsType" maxOccurs="1" minOccurs="0"/>
         <xsd:element name="creditCheckDetails" type="mod:upgradeCreditCheckDetailsType" maxOccurs="1" minOccurs="0"/>
         <xsd:element name="returnedLeaseDeviceDetails" type="mod:returnedLeasedDeviceDetailsType" maxOccurs="1" minOccurs="0"/>
         <xsd:element name="updateAccountRecurringPaymentDetails" type="mod:accountDirectDebitDetailsType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>This element is only present when the customer is updating their account recurring payment details as part of the upgrade</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="submitUpgradeOrder_1Response">
      <xsd:annotation>
         <xsd:documentation>Response of submitUpgradeOrder_1 operation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="status" type="xcore:ServiceResultType"/>
         <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
         <xsd:element name="upgradeMsisdn" type="xcore:msisdnType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeSourceDetailsType">
      <xsd:annotation>
         <xsd:documentation>Data regarding the source of the upgrade order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderMethod" type="pcp:channelType"/>
         <xsd:element name="partner" type="pcp:partnerType"/>
         <xsd:element name="owningBusinessDivision" type="pcp:typeOwningBusinessDivision"/>
         <xsd:element name="sourceOfSale" type="pcp:typeSourceOfSale"/>
         <xsd:element name="posBusinessUnit" type="pcp:typePosBusinessUnit" minOccurs="0"/>
         <xsd:element name="salesPerson" type="pcp:typeSalesPerson" minOccurs="0"/>
         <xsd:element name="salesManager" type="pcp:typeSalesPerson" minOccurs="0"/>
         <xsd:element name="upgradeProof" type="mod:upgradeProofType" minOccurs="0"/>
         <xsd:element name="callContactId" type="xsd:integer" minOccurs="0"/>
         <xsd:element name="discountMatrixId" type="mod:discountMatrixIdType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeProofType">
      <xsd:annotation>
         <xsd:documentation>Container to hold details of id-proof submitted for upgrades.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="id" type="pcp:idType"/>
         <xsd:element name="idValue" type="pcp:idValueType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeInitialPaymentDetailsType">
      <xsd:annotation>
         <xsd:documentation>Type that has the initial payment details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice>
            <xsd:element name="paymentThroughCard" type="mod:paymentThroughCardType"/>
            <xsd:element name="paymentThroughAccount" type="mod:paymentThroughAccountType"/>
         </xsd:choice>
         <xsd:element name="paymentAmount" type="pcp:paymentMoneyType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="paymentThroughCardType">
      <xsd:annotation>
         <xsd:documentation>Type that holds information about payment done via card.</xsd:documentation>
      </xsd:annotation>
      <xsd:choice>
         <xsd:sequence>
            <xsd:element name="cardToken" type="xcore:cardTokenType"/>
            <xsd:element name="paymentReference" type="mod:paymentReferenceType"/>
         </xsd:sequence>
         <xsd:sequence>
            <xsd:element name="cardDetails" type="mod:upgradeOrderCardDetailsType"/>
            <xsd:element name="paymentDetails" type="mod:upgradeOrderPaymentDetailsType"/>
         </xsd:sequence>
      </xsd:choice>
   </xsd:complexType>
   <xsd:complexType name="upgradeOrderCardDetailsType">
      <xsd:annotation>
         <xsd:documentation>Type for card details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="cardNumber" type="xcore:cardNumberType"/>
         <xsd:element name="cardCV2" type="xcore:cardCV2Type"/>
         <xsd:element name="cardExpiryDate" type="xcore:cardExpiryDateType"/>
         <xsd:element name="cardType" type="mod:paymentCardType"/>
         <xsd:element name="cardHolderName" type="xcore:cardHolderNameType"/>
         <xsd:element name="cardIssueDate" type="xcore:cardIssueDateType" minOccurs="0"/>
         <xsd:element name="cardIssueNumber" type="xcore:cardIssueNumberType" minOccurs="0"/>
         <xsd:element name="postCode" type="xcore:postcodeType"/>
         <xsd:element name="houseNameOrNumber" type="pcp:houseNameOrNumber"/>
         <xsd:element name="cardIssuer" type="pcp:cardIssuerType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeOrderPaymentDetailsType">
      <xsd:annotation>
         <xsd:documentation>Type that holds payment authorisation related information.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="paymentAuthStatus" type="pcp:paymentAuthStatusType"/>
         <xsd:element name="authorisationRespCode" type="pcp:authorisationRespCodeType" minOccurs="0"/>
         <xsd:element name="authorisationRespMessage" type="pcp:authorisationRespMessageType" minOccurs="0"/>
         <xsd:element name="authorisationCode" type="pcp:authorisationCodeType" minOccurs="0"/>
         <xsd:element name="authMessage" type="pcp:authMessageType" minOccurs="0"/>
         <xsd:element name="buynetId" type="pcp:buynetIdType" minOccurs="0"/>
         <xsd:element name="settlementRespCode" type="pcp:authorisationRespCodeType" minOccurs="0"/>
         <xsd:element name="cv2AvsCode" type="pcp:cv2AvsCodeType" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Response code from Buynet indicating validity of cv2 and avs details. 
               Three digit code. If the buynetResponseCode is 625, then it is set to failed.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="cv2AvsAction" type="pcp:cv2AvsActionType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="paymentThroughAccountType">
      <xsd:annotation>
         <xsd:documentation>Type for holding information about payment done via account.</xsd:documentation>
      </xsd:annotation>
      <xsd:choice>
         <xsd:element name="chargeToMainAccount" type="pcp:typeYesOrNo"/>
         <xsd:element name="accountToBeChargedTo" type="pcp:chargeToCrossChargeAccountReferenceType"/>
      </xsd:choice>
   </xsd:complexType>
   <xsd:complexType name="upgradeOrderTotalDetailsType">
      <xsd:annotation>
         <xsd:documentation>Contains the total amount charged and other related details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="vatTotal" type="pcp:paymentMoneyType"/>
         <xsd:element name="vatCodeDescription" type="pcp:vatCodeDescriptionType"/>
         <xsd:element name="vatReceiptRequired" type="pcp:typeYesOrNo"/>
         <xsd:element name="vatExclusiveTotalPrice" type="pcp:paymentMoneyType"/>
         <xsd:element name="total" type="pcp:paymentMoneyType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeDiscountsType">
      <xsd:annotation>
         <xsd:documentation>Holds the discounts relatated data, if applicable.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="upgradeDiscountApplicable" type="xsd:integer"/>
         <xsd:element name="upgradeDiscountActual" type="xsd:integer"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeEntitlementDetailsType">
      <xsd:annotation>
         <xsd:documentation>Type that holds information about special entitlements and overrides.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="upgradeEntitlementOverrideApplied" type="pcp:typeYesOrNo"/>
         <xsd:element name="earlyUpgradeOffered" type="pcp:typeYesOrNo"/>
         <xsd:element name="earlyUpgradeTaken" type="pcp:typeYesOrNo"/>
         <xsd:sequence minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>If the early upgrade option was taken the Fee paid and the reference to get Upgrade Entitlement call must be supplied</xsd:documentation>
            </xsd:annotation>
            <xsd:element name="earlyUpgradeFee" type="pcp:paymentMoneyType"/>
            <xsd:element name="earlyUpgradeReference" type="xsd:long"/>
         </xsd:sequence>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeSaleableProductsType">
      <xsd:annotation>
         <xsd:documentation>The salebale products within the catologue.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="saleableProductId" type="pcp:itemIdType"/>
         <xsd:element name="saleableProductName" type="pcp:saleableProductNameType"/>
         <xsd:element name="saleableProductPrice" type="pcp:paymentMoneyType"/>
         <xsd:element name="saleableProductOriginalPrice" type="pcp:paymentMoneyType">
            <xsd:annotation>
               <xsd:documentation>The original NON DISCOUNTED price for the
						saleable product. This price includes VAT. This
						price may be compared to the
						saleableProductPrice to determine if a discount
						has been given. In pence, therefore 500 equates
						to £5.00</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="systemSuggestedDiscountPrice" type="pcp:paymentMoneyType" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>The price inclusive of VAT (in pence) of a saleable
						product that the system suggests is offered to the
						customer in order to retain their business. It is used
						in retention analysis to compare the price offered by
						the Customer Service Agent with that accepted by the
						Customer</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="overridePriceDescription" minOccurs="0" maxOccurs="1" type="pcp:overridePriceDescriptionType"/>
         <xsd:element name="vatRate" type="pcp:vatRateType"/>
         <xsd:element name="vatAmount" type="pcp:paymentMoneyType"/>
         <xsd:element name="vatExclusivePrice" type="pcp:paymentMoneyType"/>
         <xsd:element name="assignedProducts" type="mod:upgradeAssignedProductType" minOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeDeliveryDetailsType">
      <xsd:annotation>
         <xsd:documentation>Only populated if physical items were despatched, for
				example in an online situation</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:choice>
            <xsd:element name="chargeableDeliveryOptionDetails" type="mod:upgradeChargeableDeliveryOptionDetailsType"/>
            <xsd:element name="isStandardDeliveryOption" type="pcp:typeYesOrNo"/>
         </xsd:choice>
         <xsd:element name="destinationName" type="pcp:destinationNameType"/>
         <xsd:element name="deliveryContactNumber" type="pcp:telNumberType" maxOccurs="1" minOccurs="0"/>
         <xsd:element name="storeDetails" type="mod:storeDetailsType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="deliveryAddress" type="xcore:addressType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeAssignedProductType">
      <xsd:annotation>
         <xsd:documentation>Details of all the assigned products for the saleable
				product</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="accessory" type="mod:upgradeAccessoryType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="adjustment" type="mod:upgradeAdjustmentType" minOccurs="0"/>
         <xsd:element name="chargeableDeliveryOption" type="mod:upgradeChargeableDeliveryOptionType" minOccurs="0"/>
         <xsd:element name="handset" type="mod:upgradeHandsetType" minOccurs="0"/>
         <xsd:element name="literature" type="mod:upgradeLiteratureType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="postpayInsurance" type="mod:upgradePostpayInsuranceType" minOccurs="0"/>
         <xsd:element name="postpaySim" type="mod:upgradePostpaySimType" minOccurs="0"/>
         <xsd:element name="postpayTariff" type="mod:upgradePostpayTariffType" minOccurs="0"/>
         <xsd:element name="standardDeliveryCharge" type="mod:upgradeStandardDeliveryChargeType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeAccessoryType">
      <xsd:annotation>
         <xsd:documentation>Details of accessories</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="dispatcherDetails" type="mod:upgradeDispatcherDetailsType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="creditOrDebitType">
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="CREDIT"/>
         <xsd:enumeration value="DEBIT"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="upgradeAdjustmentType">
      <xsd:annotation>
         <xsd:documentation>Details of adjustment</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="creditOrDebit" type="mod:creditOrDebitType"/>
         <xsd:element name="orderAdjustmentReason" type="xsd:string"/>
         <xsd:element name="adjustmentCircumstances" type="mod:adjustmentCircumstancesType"/>
         <xsd:element name="adjustmentAmount" type="pcp:paymentMoneyType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeDispatcherDetailsType">
      <xsd:annotation>
         <xsd:documentation>SKU identifier,name and risk</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="skuId" type="pcp:skuIDType"/>
         <xsd:element name="skuName" type="pcp:skuNameType">
            <xsd:annotation>
               <xsd:documentation>The name of the Stock Keeping Unit (SKU)</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="risk" type="pcp:riskType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeHandsetType">
      <xsd:annotation>
         <xsd:documentation>Details of a handset. The IMEI may not be available if the
		handset is waiting to be sent out by the disptacher</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="handsetMake" type="pcp:typeHandsetMake"/>
         <xsd:element name="handsetModel" type="pcp:typeHandsetModel"/>
         <xsd:choice>
            <xsd:element name="imei" type="xcore:imeiType"/>
            <xsd:element name="dispatcherDetails" type="mod:upgradeDispatcherDetailsType"/>
         </xsd:choice>
         <xsd:element name="CCANumber" type="pcp:CCANumberType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeLiteratureType">
      <xsd:annotation>
         <xsd:documentation>Details of Literature.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="dispatcherDetails" type="mod:upgradeDispatcherDetailsType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradePostpayInsuranceType">
      <xsd:annotation>
         <xsd:documentation>Details of postpay Insurance</xsd:documentation>
      </xsd:annotation>
      <xsd:choice>
         <xsd:sequence>
            <xsd:element name="productId" type="pcp:productIdType"/>
            <xsd:element name="productName" type="pcp:productNameType"/>
            <xsd:element name="overridePrice" type="mod:overridePriceType" minOccurs="0"/>
            <xsd:element name="assignedProductBillingFrequency" type="mod:assignedProductBillingFrequencyType"/>
         </xsd:sequence>
         <xsd:element name="cancelExistingInsurance" type="pcp:typeYesOrNo"/>
      </xsd:choice>
   </xsd:complexType>
   <xsd:complexType name="upgradePostpaySimType">
      <xsd:annotation>
         <xsd:documentation>Details of any post pay sims. The SSN field can be null
				only if it is needed to be disptached by the distribution centre</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:choice>
            <xsd:element name="ssn" type="xcore:ssnType"/>
            <xsd:element name="dispatcherDetails" type="mod:upgradeDispatcherDetailsType"/>
         </xsd:choice>
         <xsd:element name="isAutoSimSwap" type="pcp:typeYesOrNo"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradePostpayTariffType">
      <xsd:annotation>
         <xsd:documentation>Details of the post-pay tariff</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
         <xsd:element name="tariffModifier" type="mod:upgradeTariffModifierType" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeTariffModifierType">
      <xsd:annotation>
         <xsd:documentation>Details of any additional services that are required</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeStandardDeliveryChargeType">
      <xsd:annotation>
         <xsd:documentation>Details of the standard delivery charge. 
			The actual details of timeslots and address details are held in the delivery details section on the main branch. 
			This section is just for charging purposes. 
			Only used for online where the customer has not received the goods.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeChargeableDeliveryOptionType">
      <xsd:annotation>
         <xsd:documentation>Chargeable delivery option, for the order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="productId" type="pcp:productIdType"/>
         <xsd:element name="productName" type="pcp:productNameType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="upgradeChargeableDeliveryOptionDetailsType">
      <xsd:annotation>
         <xsd:documentation>Chargeable delivery option details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="deliveryDate" type="xsd:date"/>
         <xsd:element name="despatchDate" type="xsd:date"/>
         <xsd:element name="timeSlot" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="assignedProductBillingFrequencyType">
      <xsd:annotation>
         <xsd:documentation>The billing frequency used when billing for an assigned product. Currently only used for insurance products.
			O - One Off
			M - Monthly Recurring</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="O"/>
         <xsd:enumeration value="M"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="adjustmentCircumstancesType">
      <xsd:annotation>
         <xsd:documentation>CSA can record a note against the adjustment Note Geneva can store upto 255, 
			limit this string to 200 chars in order to potentially reserve space for CSAID to be appended and stored in Geneva.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:maxLength value="200"/>
         <xsd:minLength value="1"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="discountMatrixIdType">
      <xsd:annotation>
         <xsd:documentation>Id to record the discount offered.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:maxLength value="2"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="upgradeCreditCheckDetailsType">
      <xsd:annotation>
         <xsd:documentation>Credit check details including the status of credit check, vet number, score and last credit check date.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="status" type="mod:creditCheckStatusType"/>
         <xsd:element name="vetNumber" type="mod:creditCheckVetNumberType" minOccurs="0"/>
         <xsd:element name="score" type="mod:creditCheckScoreType" minOccurs="0"/>
         <xsd:element name="lastCheckDate" type="xsd:date" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>Date the credit check was last performed.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="returnedLeasedDeviceDetailsType">
      <xsd:annotation>
         <xsd:documentation>This element is only present when the upgrade was from a Leased Device. 
         It holds details of the returned device.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="handsetMake" type="pcp:typeHandsetMake"/>
         <xsd:element name="handsetModel" type="pcp:typeHandsetModel"/>
         <xsd:element name="imei" type="xcore:imeiType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="paymentReferenceType">
      <xsd:annotation>
         <xsd:documentation>A unique identifier assigned by the payment service provider.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:maxLength value="16"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="storeDetailsType">
      <xsd:annotation>
         <xsd:documentation>This element is used for capturing store details consisting of storeName and storeId</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="storeNumber" type="pcp:storeNumberType"/>
         <xsd:element name="storeName" type="pcp:storeNameType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:simpleType name="orderNumberType">
      <xsd:annotation>
         <xsd:documentation>The Order Number.Representation of an order number, in
        the form ab-12345678 or ab-123456789.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:minLength value="1"/>
         <xsd:maxLength value="50"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="consignmentNumberType">
      <xsd:annotation>
         <xsd:documentation>Also referrred to as the parcel number or parcel tracking number.
        This will not always be available, because some couriers do not provide such a number</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:minLength value="1"/>
         <xsd:maxLength value="50"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="orderStatusType">
      <xsd:annotation>
         <xsd:documentation>This is the status of each order.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RECEIVED_IN_STORE"/>
         <xsd:enumeration value="COLLECTED"/>
         <xsd:enumeration value="UNCOLLECTED1"/>
         <xsd:enumeration value="UNCOLLECTED2"/>
         <xsd:enumeration value="RETURNED"/>
         <xsd:enumeration value="DELIVERY_FAILED"/>
         <xsd:enumeration value="COLLECTION_EXTENSION"/>
         <xsd:enumeration value="CLOSED"/>
         <xsd:enumeration value="CANCELLED"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="storeDomainType">
      <xsd:annotation>
         <xsd:documentation/>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:enumeration value="RETAIL_STOCK_MANAGEMENT"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:simpleType name="storeNumberType">
      <xsd:annotation>
         <xsd:documentation>four character Store Identifier like 0001</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:length value="4"/>
         <xsd:pattern value="[0-9]{4}"/>
      </xsd:restriction>
   </xsd:simpleType>
   <xsd:complexType name="sourceType">
      <xsd:sequence>
         <xsd:element name="storeNumber" type="mod:storeNumberType" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>This is the Store Id
            This will be used by Order Management to include the store 
            that the parcel has been delivered to in the mail. Especially useful
            if parcel has been sent to wrong store.
            This is marked as optional.
            Business Owner investigating whether this is actually required.</xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="storeDomain" type="mod:storeDomainType" minOccurs="1" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getConsignmentDetails_1">
      <xsd:annotation>
         <xsd:documentation>getConsignmentDetails request.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderNumber" type="mod:orderNumberType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="consignmentNumber" type="mod:consignmentNumberType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="storeNumber" type="mod:storeNumberType" minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="getConsignmentDetails_1Response">
      <xsd:annotation>
         <xsd:documentation>This element contains the response of getConsignmentDetails operation.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderConsignmentDetails" type="mod:consignmentDetailsType" minOccurs="1" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="consignmentDetailsType">
      <xsd:annotation>
         <xsd:documentation>Consignment Details of every order.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="customerDetails" type="mod:customerDetailsType" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="orderDetails" type="mod:customerOrderDetailsType" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="storeDetails" type="mod:storeDetailType" minOccurs="1" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="customerDetailsType">
      <xsd:annotation>
         <xsd:documentation>Contains customer personal details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="title" type="pcp:partyTitleType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="firstName" type="pcp:firstNameType" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="surname" type="pcp:partySurnameType" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="address" type="mod:customerAddressType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="collectionReference" type="xsd:string" maxOccurs="1"/>
         <xsd:element name="contactNumber" type="xcore:msisdnType" maxOccurs="1"/>
         <xsd:element name="alternativeContactNumber" type="xcore:msisdnType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="emailAddress" type="xcore:emailAddressType" minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="customerOrderDetailsType">
      <xsd:annotation>
         <xsd:documentation>Contains customer order details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="sourceDetails" type="mod:sourceDetailsType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="orderNumber" type="mod:orderNumberType" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="orderDateTime" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="dispatchDate" type="xsd:date" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="deliveryDate" type="xsd:date" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="despatchReference" type="xsd:string" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="productDescription" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="releaseToCustomerDate" type="xsd:date" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="consignmentNumber" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="sourceDetailsType">
      <xsd:annotation>
         <xsd:documentation>Contains details about the source of the order(requester).
         		method used while placing an Order, possible values are:
         			RT	Retail, OL	Online(Default),TS	Telesales, 
         			IA IT partner - Identifier through which the order was placed,
         			O2 shop or third party owningBusinessDivision - Business Division owning the order, possible values:
         			O2UK		Non-online
         			O2ONLINE	Online
         		sourceOfSale - the source channel through which order was placed, shop platform or sales channel</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="orderMethod" type="xsd:string" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="partner" type="xsd:string" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="owningBusinessDivision" type="xsd:string" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="sourceOfSale" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="customerAddressType">
      <xsd:annotation>
         <xsd:documentation>Contains customer address details.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="houseNameOrNumber" type="pcp:houseNameOrNumber" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="street" type="pcp:postalStreet" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="city" type="pcp:cityType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="county" type="pcp:countyType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="country" type="xcore:countryCodeType" minOccurs="0" maxOccurs="1"/>
         <xsd:element name="postcode" type="pcp:postcode" minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="storeDetailType">
      <xsd:annotation>
         <xsd:documentation>This element is used for capturing store details consisting of storeName and storeId</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="storeNumber" type="pcp:storeNumberType" minOccurs="1" maxOccurs="1"/>
         <xsd:element name="storeName" type="pcp:storeNameType" minOccurs="0" maxOccurs="1"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="CCADetailsType">
      <xsd:annotation>
         <xsd:documentation>Contains the information about each Consumer Credit Agreement the customer has taken to pay for hardware.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="CCANumber" type="pcp:CCANumberType"/>
         <xsd:element name="CCAFinancialDetails" type="mod:CCAFinancialDetailsType"/>
         <xsd:element name="CCACustomerDetails" type="mod:CCACustomerDetailsType"/>
         <xsd:element name="CCA" type="pcp:CCAFileDetailsType"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="CCAFinancialDetailsType">
      <xsd:annotation>
         <xsd:documentation>The financials for the Consumer Credit Agreement.
         	Please note the actuals financials for the oneOffpayment are held in the intialPaymentDetails. 
         	If no upfront payment was captured then the oneOffPaymentAmount should be set to 0.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="hardwareDescription" type="pcp:hardwareDescriptionType"/>
         <xsd:element name="hardwareRRP" type="pcp:hardwareRRPType"/>
         <xsd:element name="downPayment" type="pcp:downPaymentType"/>
         <xsd:element name="instalment" type="pcp:instalmentAmountType"/>
         <xsd:element name="term" type="pcp:CCATermType"/>
         <xsd:element name="totalCredit" type="pcp:totalCreditType"/>
         <xsd:element name="tariffDiscount" type="pcp:discountAmountType" minOccurs="0"/>
         <xsd:element name="discretionaryDiscount" type="pcp:discountAmountType" minOccurs="0"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="CCACustomerDetailsType">
      <xsd:annotation>
         <xsd:documentation>The details of the person who has signed the consumer credit agreement.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="title" type="xsd:string"/>
         <xsd:element name="forename" type="xsd:string"/>
         <xsd:element name="lastname" type="xsd:string"/>
         <xsd:element name="addressHouseName" type="xsd:string" minOccurs="0"/>
         <xsd:element name="addressHouseNumber" type="xsd:string" minOccurs="0"/>
         <xsd:element name="address1stLine" type="xsd:string"/>
         <xsd:element name="address2ndLine" type="xsd:string" minOccurs="0"/>
         <xsd:element name="address3rdLine" type="xsd:string" minOccurs="0"/>
         <xsd:element name="address4thLine" type="xsd:string" minOccurs="0"/>
         <xsd:element name="postCode" type="xsd:string"/>
         <xsd:element name="postalCountry" type="xsd:string"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="accountDirectDebitDetailsType">
      <xsd:annotation>
         <xsd:documentation>This field contains the bank information used for Direct Debit payments.</xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="userAccountNumber" type="xcore:bankAccountNumberType"/>
         <xsd:element name="bankAccountNumber" type="xcore:bankAccountNumberType" minOccurs="0"/>
         <xsd:element name="bankSortCode" type="xcore:bankSortCodeType"/>
         <xsd:element name="bankAccountName" type="xcore:bankAccountHolderNameType"/>
      </xsd:sequence>
   </xsd:complexType>
</xsd:schema>